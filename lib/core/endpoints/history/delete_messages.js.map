{"version":3,"sources":["core/endpoints/history/delete_messages.js"],"names":["getOperation","validateParams","useDelete","getURL","getRequestTimeout","isAuthSupported","prepareParams","handleResponse","PNDeleteMessagesOperation","modules","incomingParams","channel","config","subscribeKey","start","end","querystring","encodeString","getTransactionTimeout","outgoingParams","serverResponse","payload"],"mappings":";;;;;QAMgBA,Y,GAAAA,Y;QAIAC,c,GAAAA,c;QAQAC,S,GAAAA,S;QAIAC,M,GAAAA,M;QAgBAC,iB,GAAAA,iB;QAIAC,e,GAAAA,e;QAIAC,a,GAAAA,a;QAWAC,c,GAAAA,c;;AAvDhB;;AACA;;;;AACA;;;;;;AAEO,SAASP,YAAT,GAAgC;AACrC,SAAO,qBAAmBQ,yBAA1B;AACD;;AAEM,SAASP,cAAT,CAAwBQ,OAAxB,EAAgDC,cAAhD,EAAuF;AAAA,MACtFC,OADsF,GAC1ED,cAD0E,CACtFC,OADsF;AAAA,MAEtFC,MAFsF,GAE3EH,OAF2E,CAEtFG,MAFsF;;;AAI5F,MAAI,CAACD,OAAL,EAAc,OAAO,iBAAP;AACd,MAAI,CAACC,OAAOC,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAASX,SAAT,GAAqB;AAC1B,SAAO,IAAP;AACD;;AAEM,SAASC,MAAT,CAAgBM,OAAhB,EAAwCC,cAAxC,EAAuF;AAAA,MACtFC,OADsF,GAC9DD,cAD8D,CACtFC,OADsF;AAAA,MAC7EG,KAD6E,GAC9DJ,cAD8D,CAC7EI,KAD6E;AAAA,MACtEC,GADsE,GAC9DL,cAD8D,CACtEK,GADsE;AAAA,MAEtFH,MAFsF,GAE3EH,OAF2E,CAEtFG,MAFsF;;AAG5F,MAAII,cAAc,EAAlB;;AAEA,MAAIF,KAAJ,EAAW;AACTE,8BAAwBF,KAAxB;AACD;;AAED,MAAIC,GAAJ,EAAS;AACPC,oBAAmBA,gBAAgB,EAAhB,GAAqB,GAArB,GAA2B,GAA9C,aAAyDD,GAAzD;AACD;;AAED,kCAA8BH,OAAOC,YAArC,iBAA6D,gBAAMI,YAAN,CAAmBN,OAAnB,CAA7D,GAA2FK,WAA3F;AACD;;AAEM,SAASZ,iBAAT,OAA+D;AAAA,MAAlCQ,MAAkC,QAAlCA,MAAkC;;AACpE,SAAOA,OAAOM,qBAAP,EAAP;AACD;;AAEM,SAASb,eAAT,GAAoC;AACzC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,CAAuBG,OAAvB,EAA+CC,cAA/C,EAA8F;AAAA,MAC3FI,KAD2F,GAC5EJ,cAD4E,CAC3FI,KAD2F;AAAA,MACpFC,GADoF,GAC5EL,cAD4E,CACpFK,GADoF;;;AAGnG,MAAII,iBAAyB,EAA7B;;AAEA,MAAIL,KAAJ,EAAWK,eAAeL,KAAf,GAAuBA,KAAvB;AACX,MAAIC,GAAJ,EAASI,eAAeJ,GAAf,GAAqBA,GAArB;;AAET,SAAO,EAAP;AACD;;AAEM,SAASR,cAAT,CAAwBE,OAAxB,EAAgDW,cAAhD,EAAyF;AAC9F,SAAOA,eAAeC,OAAtB;AACD","file":"delete_messages.js","sourcesContent":["/* @flow */\n\nimport { FetchHistoryArguments, HistoryResponse, ModulesInject } from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\nimport utils from '../../utils';\n\nexport function getOperation(): string {\n  return operationConstants.PNDeleteMessagesOperation;\n}\n\nexport function validateParams(modules: ModulesInject, incomingParams: FetchHistoryArguments) {\n  let { channel } = incomingParams;\n  let { config } = modules;\n\n  if (!channel) return 'Missing channel';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function useDelete() {\n  return true;\n}\n\nexport function getURL(modules: ModulesInject, incomingParams: FetchHistoryArguments): string {\n  let { channel, start, end } = incomingParams;\n  let { config } = modules;\n  let querystring = '';\n\n  if (start) {\n    querystring = `?start=${start}`;\n  }\n\n  if (end) {\n    querystring += `${(querystring !== '' ? '&' : '?')}end=${end}`;\n  }\n\n  return `/v3/history/sub-key/${config.subscribeKey}/channel/${utils.encodeString(channel)}${querystring}`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject): boolean {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported(): boolean {\n  return true;\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: FetchHistoryArguments): Object {\n  const { start, end } = incomingParams;\n\n  let outgoingParams: Object = {};\n\n  if (start) outgoingParams.start = start;\n  if (end) outgoingParams.end = end;\n\n  return {};\n}\n\nexport function handleResponse(modules: ModulesInject, serverResponse: Object): HistoryResponse {\n  return serverResponse.payload;\n}\n"]}