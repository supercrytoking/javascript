{"version":3,"sources":["core/endpoints/history/get_history.js"],"names":["__processMessage","modules","message","config","crypto","cipherKey","decrypt","e","getOperation","operationConstants","PNHistoryOperation","validateParams","incomingParams","channel","subscribeKey","getURL","utils","encodeString","getRequestTimeout","getTransactionTimeout","isAuthSupported","prepareParams","start","end","reverse","count","stringifiedTimeToken","outgoingParams","include_token","string_message_token","toString","handleResponse","serverResponse","response","messages","startTimeToken","endTimeToken","forEach","serverHistoryItem","item","timetoken","entry","push"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport {\n  FetchHistoryArguments,\n  HistoryResponse,\n  HistoryItem,\n  ModulesInject,\n} from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\nimport utils from '../../utils';\n\nfunction __processMessage(modules, message: Object): Object | null {\n  let { config, crypto } = modules;\n  if (!config.cipherKey) return message;\n\n  try {\n    return crypto.decrypt(message);\n  } catch (e) {\n    return message;\n  }\n}\n\nexport function getOperation(): string {\n  return operationConstants.PNHistoryOperation;\n}\n\nexport function validateParams(\n  modules: ModulesInject,\n  incomingParams: FetchHistoryArguments\n) {\n  let { channel } = incomingParams;\n  let { config } = modules;\n\n  if (!channel) return 'Missing channel';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(\n  modules: ModulesInject,\n  incomingParams: FetchHistoryArguments\n): string {\n  let { channel } = incomingParams;\n  let { config } = modules;\n  return `/v2/history/sub-key/${\n    config.subscribeKey\n  }/channel/${utils.encodeString(channel)}`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject): boolean {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported(): boolean {\n  return true;\n}\n\nexport function prepareParams(\n  modules: ModulesInject,\n  incomingParams: FetchHistoryArguments\n): Object {\n  const {\n    start,\n    end,\n    reverse,\n    count = 100,\n    stringifiedTimeToken = false,\n  } = incomingParams;\n  let outgoingParams: Object = {\n    include_token: 'true',\n  };\n\n  outgoingParams.count = count;\n  if (start) outgoingParams.start = start;\n  if (end) outgoingParams.end = end;\n  if (stringifiedTimeToken) outgoingParams.string_message_token = 'true';\n  if (reverse != null) outgoingParams.reverse = reverse.toString();\n\n  return outgoingParams;\n}\n\nexport function handleResponse(\n  modules: ModulesInject,\n  serverResponse: FetchHistoryArguments\n): HistoryResponse {\n  const response: HistoryResponse = {\n    messages: [],\n    startTimeToken: serverResponse[1],\n    endTimeToken: serverResponse[2],\n  };\n\n  serverResponse[0].forEach((serverHistoryItem) => {\n    const item: HistoryItem = {\n      timetoken: serverHistoryItem.timetoken,\n      entry: __processMessage(modules, serverHistoryItem.message),\n    };\n\n    response.messages.push(item);\n  });\n\n  return response;\n}\n"],"file":"get_history.js"}