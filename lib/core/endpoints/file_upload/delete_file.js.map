{"version":3,"sources":["core/endpoints/file_upload/delete_file.js"],"names":["endpoint","getOperation","operationConstants","PNListFilesOperation","validateParams","_","params","channel","id","name","useDelete","getURL","config","subscribeKey","getRequestTimeout","getTransactionTimeout","isAuthSupported","getAuthToken","tokenManager","getToken","prepareParams","handleResponse","response","status"],"mappings":";;;;;;;;;AAGA;;AAGA,IAAMA,QAA4D,GAAG;AACnEC,EAAAA,YAAY,EAAE;AAAA,WAAMC,uBAAmBC,oBAAzB;AAAA,GADqD;AAGnEC,EAAAA,cAAc,EAAE,wBAACC,CAAD,EAAIC,MAAJ,EAAe;AAC7B,QAAI,EAACA,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEC,OAAT,CAAJ,EAAsB;AACpB,aAAO,wBAAP;AACD;;AAED,QAAI,EAACD,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEE,EAAT,CAAJ,EAAiB;AACf,aAAO,wBAAP;AACD;;AAED,QAAI,EAACF,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEG,IAAT,CAAJ,EAAmB;AACjB,aAAO,0BAAP;AACD;AACF,GAfkE;AAiBnEC,EAAAA,SAAS,EAAE;AAAA,WAAM,IAAN;AAAA,GAjBwD;AAkBnEC,EAAAA,MAAM,EAAE,sBAAaL,MAAb;AAAA,QAAGM,MAAH,QAAGA,MAAH;AAAA,+BAAqCA,MAAM,CAACC,YAA5C,uBAAqEP,MAAM,CAACC,OAA5E,oBAA6FD,MAAM,CAACE,EAApG,cAA0GF,MAAM,CAACG,IAAjH;AAAA,GAlB2D;AAoBnEK,EAAAA,iBAAiB,EAAE;AAAA,QAAGF,MAAH,SAAGA,MAAH;AAAA,WAAgBA,MAAM,CAACG,qBAAP,EAAhB;AAAA,GApBgD;AAsBnEC,EAAAA,eAAe,EAAE;AAAA,WAAM,IAAN;AAAA,GAtBkD;AAwBnEC,EAAAA,YAAY,EAAE;AAAA,QAAGC,YAAH,SAAGA,YAAH;AAAA,WAAsBA,YAAY,CAACC,QAAb,CAAsB,YAAtB,CAAtB;AAAA,GAxBqD;AA0BnEC,EAAAA,aAAa,EAAE;AAAA,WAAO,EAAP;AAAA,GA1BoD;AA4BnEC,EAAAA,cAAc,EAAE,wBAAChB,CAAD,EAAIiB,QAAJ;AAAA,WAAoC;AAClDC,MAAAA,MAAM,EAAED,QAAQ,CAACC;AADiC,KAApC;AAAA;AA5BmD,CAArE;eAiCevB,Q","sourcesContent":["/** @flow */\n\nimport type { EndpointConfig } from '../endpoint';\nimport operationConstants from '../../constants/operations';\nimport type { DeleteFileParams, DeleteFileResult } from './types';\n\nconst endpoint: EndpointConfig<DeleteFileParams, DeleteFileResult> = {\n  getOperation: () => operationConstants.PNListFilesOperation,\n\n  validateParams: (_, params) => {\n    if (!params?.channel) {\n      return \"channel can't be empty\";\n    }\n\n    if (!params?.id) {\n      return \"file id can't be empty\";\n    }\n\n    if (!params?.name) {\n      return \"file name can't be empty\";\n    }\n  },\n\n  useDelete: () => true,\n  getURL: ({ config }, params) => `/v1/files/${config.subscribeKey}/channels/${params.channel}/files/${params.id}/${params.name}`,\n\n  getRequestTimeout: ({ config }) => config.getTransactionTimeout(),\n\n  isAuthSupported: () => true,\n\n  getAuthToken: ({ tokenManager }) => tokenManager.getToken('fileUpload'),\n\n  prepareParams: () => ({}),\n\n  handleResponse: (_, response): DeleteFileResult => ({\n    status: response.status,\n  }),\n};\n\nexport default endpoint;\n"],"file":"delete_file.js"}