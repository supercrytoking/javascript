{"version":3,"sources":["core/endpoints/objects/member/get.js"],"names":["endpoint","getOperation","operationConstants","PNGetMembersOperation","validateParams","_","params","channel","getURL","config","subscribeKey","getRequestTimeout","getTransactionTimeout","isAuthSupported","getAuthToken","tokenManager","getToken","prepareParams","_modules","queryParams","include","customFields","push","customUUIDFields","UUIDFields","totalCount","count","page","next","start","prev","end","filter","limit","sort","Object","entries","map","key","value","handleResponse","response","status","data"],"mappings":"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","sourcesContent":["/** @flow */\n\nimport type { EndpointConfig } from '../../endpoint';\nimport operationConstants from '../../../constants/operations';\nimport type { Member, PaginatedResultParams } from './member';\n\nexport type GetMembersParams = {\n  channel: string,\n} & PaginatedResultParams;\n\nexport type GetMembersResult = {|\n  status: 200,\n  data: Member[],\n  totalCount?: number,\n  prev?: string,\n  next?: string,\n|};\n\nconst endpoint: EndpointConfig<GetMembersParams, GetMembersResult> = {\n  getOperation: () => operationConstants.PNGetMembersOperation,\n\n  // No required parameters.\n  validateParams: (_, params) => {\n    if (!params?.channel) {\n      return 'UUID cannot be empty';\n    }\n  },\n\n  getURL: ({ config }, params) => `/v2/objects/${config.subscribeKey}/channels/${params.channel}/uuids`,\n\n  getRequestTimeout: ({ config }) => config.getTransactionTimeout(),\n\n  isAuthSupported: () => true,\n\n  getAuthToken: ({ tokenManager }) => tokenManager.getToken('member'),\n\n  prepareParams: (_modules, params) => {\n    const queryParams = {};\n\n    if (params?.include) {\n      queryParams.include = [];\n\n      if (params.include?.customFields) {\n        queryParams.include.push('custom');\n      }\n\n      if (params.include?.customUUIDFields) {\n        queryParams.include.push('uuid.custom');\n      }\n\n      if (params.include?.UUIDFields ?? true) {\n        queryParams.include.push('uuid');\n      }\n    }\n\n    if (params?.include?.totalCount) {\n      queryParams.count = params.include?.totalCount;\n    }\n\n    if (params?.page?.next) {\n      queryParams.start = params.page?.next;\n    }\n\n    if (params?.page?.prev) {\n      queryParams.end = params.page?.prev;\n    }\n\n    if (params?.filter) {\n      queryParams.filter = params.filter;\n    }\n\n    queryParams.limit = params?.limit ?? 100;\n\n    if (params?.sort) {\n      queryParams.sort = Object.entries(params.sort ?? {}).map(([key, value]) => {\n        if (value === 'asc' || value === 'desc') {\n          return `${key}:${value}`;\n        } else {\n          return key;\n        }\n      });\n    }\n\n    return queryParams;\n  },\n\n  handleResponse: (_, response): GetMembersResult => ({\n    status: response.status,\n    data: response.data,\n    totalCount: response.totalCount,\n    prev: response.prev,\n    next: response.next,\n  }),\n};\n\nexport default endpoint;\n"],"file":"get.js"}