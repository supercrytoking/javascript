{"version":3,"sources":["web/index.js"],"names":["sendBeacon","url","navigator","setup","listenToBrowserNetworkEvents","db","cbor","Cbor","sdkFamily","networking","Networking","del","get","post","patch","window","addEventListener","networkDownDetected","networkUpDetected","PubNubCore"],"mappings":";;;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;AAEA,SAASA,UAAT,CAAoBC,GAApB,EAAiC;AAC/B,MAAIC,SAAS,IAAIA,SAAS,CAACF,UAA3B,EAAuC;AACrCE,IAAAA,SAAS,CAACF,UAAV,CAAqBC,GAArB;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;AACF;;;;;AAGC,oBAAYE,KAAZ,EAAwC;AAAA;;AAAA;;AAAA,gCAEUA,KAFV,CAE9BC,4BAF8B;AAAA,QAE9BA,4BAF8B,sCAEC,IAFD;AAItCD,IAAAA,KAAK,CAACE,EAAN,GAAWA,eAAX;AACAF,IAAAA,KAAK,CAACG,IAAN,GAAa,IAAIC,kBAAJ,EAAb;AACAJ,IAAAA,KAAK,CAACK,SAAN,GAAkB,KAAlB;AACAL,IAAAA,KAAK,CAACM,UAAN,GAAmB,IAAIC,sBAAJ,CAAe;AAAEC,MAAAA,GAAG,EAAHA,YAAF;AAAOC,MAAAA,GAAG,EAAHA,YAAP;AAAYC,MAAAA,IAAI,EAAJA,aAAZ;AAAkBC,MAAAA,KAAK,EAALA,cAAlB;AAAyBd,MAAAA,UAAU,EAAVA;AAAzB,KAAf,CAAnB;AAEA,kFAAMG,KAAN;;AAEA,QAAIC,4BAAJ,EAAkC;AAEhCW,MAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,YAAM;AACvC,cAAKC,mBAAL;AACD,OAFD;AAIAF,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,YAAM;AACtC,cAAKE,iBAAL;AACD,OAFD;AAGD;;AApBqC;AAqBvC;;;EAtB0BC,wB","sourcesContent":["/* @flow */\n/* global navigator, window */\n\nimport PubNubCore from '../core/pubnub-common';\nimport Networking from '../networking';\nimport db from '../db/web';\nimport Cbor from '../cbor/common';\nimport { del, get, post, patch } from '../networking/modules/web-node';\nimport { InternalSetupStruct } from '../core/flow_interfaces';\n\nfunction sendBeacon(url: string) {\n  if (navigator && navigator.sendBeacon) {\n    navigator.sendBeacon(url);\n  } else {\n    return false;\n  }\n}\n\nexport default class extends PubNubCore {\n  constructor(setup: InternalSetupStruct) {\n    // extract config.\n    const { listenToBrowserNetworkEvents = true } = setup;\n\n    setup.db = db;\n    setup.cbor = new Cbor();\n    setup.sdkFamily = 'Web';\n    setup.networking = new Networking({ del, get, post, patch, sendBeacon });\n\n    super(setup);\n\n    if (listenToBrowserNetworkEvents) {\n      // mount network events.\n      window.addEventListener('offline', () => {\n        this.networkDownDetected();\n      });\n\n      window.addEventListener('online', () => {\n        this.networkUpDetected();\n      });\n    }\n  }\n}\n"],"file":"index.js"}