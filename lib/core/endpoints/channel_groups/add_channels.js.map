{"version":3,"sources":["core/endpoints/channel_groups/add_channels.js"],"names":["getOperation","validateParams","getURL","getRequestTimeout","isAuthSupported","prepareParams","handleResponse","PNAddChannelsToGroupOperation","modules","incomingParams","channels","channelGroup","config","length","subscribeKey","encodeString","getTransactionTimeout","add","join"],"mappings":";;;;;QAMgBA,Y,GAAAA,Y;QAIAC,c,GAAAA,c;QASAC,M,GAAAA,M;QAMAC,iB,GAAAA,iB;QAIAC,e,GAAAA,e;QAIAC,a,GAAAA,a;QAQAC,c,GAAAA,c;;AAvChB;;AACA;;;;AACA;;;;;;AAEO,SAASN,YAAT,GAAgC;AACrC,SAAO,qBAAmBO,6BAA1B;AACD;;AAEM,SAASN,cAAT,CAAwBO,OAAxB,EAAgDC,cAAhD,EAAkF;AAAA,MACjFC,QADiF,GACtDD,cADsD,CACjFC,QADiF;AAAA,MACvEC,YADuE,GACtDF,cADsD,CACvEE,YADuE;AAAA,MAEjFC,MAFiF,GAEtEJ,OAFsE,CAEjFI,MAFiF;;;AAIvF,MAAI,CAACD,YAAL,EAAmB,OAAO,uBAAP;AACnB,MAAI,CAACD,QAAD,IAAaA,SAASG,MAAT,KAAoB,CAArC,EAAwC,OAAO,kBAAP;AACxC,MAAI,CAACD,OAAOE,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAASZ,MAAT,CAAgBM,OAAhB,EAAwCC,cAAxC,EAAkF;AAAA,MACjFE,YADiF,GAChEF,cADgE,CACjFE,YADiF;AAAA,MAEjFC,MAFiF,GAEtEJ,OAFsE,CAEjFI,MAFiF;;AAGvF,+CAA2CA,OAAOE,YAAlD,uBAAgF,gBAAMC,YAAN,CAAmBJ,YAAnB,CAAhF;AACD;;AAEM,SAASR,iBAAT,OAA8D;AAAA,MAAjCS,MAAiC,QAAjCA,MAAiC;;AACnE,SAAOA,OAAOI,qBAAP,EAAP;AACD;;AAEM,SAASZ,eAAT,GAAoC;AACzC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,CAAuBG,OAAvB,EAA+CC,cAA/C,EAAyF;AAAA,8BACtEA,cADsE,CACxFC,QADwF;AAAA,MACxFA,QADwF,yCAC7E,EAD6E;;;AAG9F,SAAO;AACLO,SAAKP,SAASQ,IAAT,CAAc,GAAd;AADA,GAAP;AAGD;;AAEM,SAASZ,cAAT,GAAkC;AACvC,SAAO,EAAP;AACD","file":"add_channels.js","sourcesContent":["/* @flow */\n\nimport { AddChannelParams, ModulesInject } from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\nimport utils from '../../utils';\n\nexport function getOperation(): string {\n  return operationConstants.PNAddChannelsToGroupOperation;\n}\n\nexport function validateParams(modules: ModulesInject, incomingParams: AddChannelParams) {\n  let { channels, channelGroup } = incomingParams;\n  let { config } = modules;\n\n  if (!channelGroup) return 'Missing Channel Group';\n  if (!channels || channels.length === 0) return 'Missing Channels';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules: ModulesInject, incomingParams: AddChannelParams): string {\n  let { channelGroup } = incomingParams;\n  let { config } = modules;\n  return `/v1/channel-registration/sub-key/${config.subscribeKey}/channel-group/${utils.encodeString(channelGroup)}`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject): number {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported(): boolean {\n  return true;\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: AddChannelParams): Object {\n  let { channels = [] } = incomingParams;\n\n  return {\n    add: channels.join(',')\n  };\n}\n\nexport function handleResponse(): Object {\n  return {};\n}\n"]}