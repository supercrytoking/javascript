{"version":3,"sources":["core/endpoints/access_manager/audit.js"],"names":["getOperation","validateParams","getURL","getRequestTimeout","isAuthSupported","prepareParams","handleResponse","modules","config","subscribeKey","getTransactionTimeout","incomingParams","channel","channelGroup","authKeys","params","timestamp","Math","floor","Date","getTime","length","auth","join","serverResponse","payload"],"mappings":";;;;;QAIgBA,Y,GAAAA,Y;QAIAC,c,GAAAA,c;QAMAC,M,GAAAA,M;QAKAC,iB,GAAAA,iB;QAIAC,e,GAAAA,e;QAIAC,a,GAAAA,a;QAqBAC,c,GAAAA,c;;AA9ChB;;AAEO,SAASN,YAAT,GAAgC;AACrC,SAAO,sBAAP;AACD;;AAEM,SAASC,cAAT,CAAwBM,OAAxB,EAAgD;AAAA,MAC/CC,MAD+C,GACpCD,OADoC,CAC/CC,MAD+C;;;AAGrD,MAAI,CAACA,OAAOC,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAASP,MAAT,CAAgBK,OAAhB,EAAgD;AAAA,MAC/CC,MAD+C,GACpCD,OADoC,CAC/CC,MAD+C;;AAErD,SAAO,4BAA4BA,OAAOC,YAA1C;AACD;;AAEM,SAASN,iBAAT,OAA8D;AAAA,MAAjCK,MAAiC,QAAjCA,MAAiC;;AACnE,SAAOA,OAAOE,qBAAP,EAAP;AACD;;AAEM,SAASN,eAAT,GAAoC;AACzC,SAAO,KAAP;AACD;;AAEM,SAASC,aAAT,CAAuBE,OAAvB,EAA+CI,cAA/C,EAAuF;AAAA,MACpFC,OADoF,GAC3CD,cAD2C,CACpFC,OADoF;AAAA,MAC3EC,YAD2E,GAC3CF,cAD2C,CAC3EE,YAD2E;AAAA,8BAC3CF,cAD2C,CAC7DG,QAD6D;AAAA,MAC7DA,QAD6D,yCAClD,EADkD;;AAE5F,MAAMC,SAAS,EAAf;;AAEAA,SAAOC,SAAP,GAAmBC,KAAKC,KAAL,CAAW,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAlC,CAAnB;;AAEA,MAAIR,OAAJ,EAAa;AACXG,WAAOH,OAAP,GAAiBA,OAAjB;AACD;;AAED,MAAIC,YAAJ,EAAkB;AAChBE,WAAO,eAAP,IAA0BF,YAA1B;AACD;;AAED,MAAIC,SAASO,MAAT,GAAkB,CAAtB,EAAyB;AACvBN,WAAOO,IAAP,GAAcR,SAASS,IAAT,CAAc,GAAd,CAAd;AACD;;AAED,SAAOR,MAAP;AACD;;AAEM,SAAST,cAAT,CAAwBC,OAAxB,EAAgDiB,cAAhD,EAAgF;AACrF,SAAOA,eAAeC,OAAtB;AACD","file":"core/endpoints/access_manager/audit.js","sourcesContent":["/* @flow */\n\nimport { AuditArguments, ModulesInject } from '../../flow_interfaces';\n\nexport function getOperation(): string {\n  return 'PNAccessManagerAudit';\n}\n\nexport function validateParams(modules: ModulesInject) {\n  let { config } = modules;\n\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules: ModulesInject): string {\n  let { config } = modules;\n  return '/v1/auth/audit/sub-key/' + config.subscribeKey;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject): number {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported(): boolean {\n  return false;\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: AuditArguments): Object {\n  const { channel, channelGroup, authKeys = [] } = incomingParams;\n  const params = {};\n\n  params.timestamp = Math.floor(new Date().getTime() / 1000);\n\n  if (channel) {\n    params.channel = channel;\n  }\n\n  if (channelGroup) {\n    params['channel-group'] = channelGroup;\n  }\n\n  if (authKeys.length > 0) {\n    params.auth = authKeys.join(',');\n  }\n\n  return params;\n}\n\nexport function handleResponse(modules: ModulesInject, serverResponse: Object): Object {\n  return serverResponse.payload;\n}\n"],"sourceRoot":"/source/"}