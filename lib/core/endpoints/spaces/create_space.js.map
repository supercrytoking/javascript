{"version":3,"sources":["core/endpoints/spaces/create_space.js"],"names":["prepareMessagePayload","modules","messagePayload","stringifiedPayload","JSON","stringify","getOperation","operationConstants","PNCreateSpaceOperation","validateParams","incomingParams","config","id","name","custom","subscribeKey","Object","values","every","value","usePost","getURL","postURL","getRequestTimeout","getTransactionTimeout","isAuthSupported","prepareParams","include","params","customFields","undefined","includes","push","includesString","join","length","postPayload","handleResponse","spacesResponse"],"mappings":";;;;;;;;;;;;;;;;AAEA;;AAKA;;;;AAEA,SAASA,qBAAT,CAA+BC,OAA/B,EAAwCC,cAAxC,EAAwD;AACtD,MAAIC,kBAAkB,GAAGC,IAAI,CAACC,SAAL,CAAeH,cAAf,CAAzB;AAEA,SAAOC,kBAAP;AACD;;AAEM,SAASG,YAAT,GAAgC;AACrC,SAAOC,uBAAmBC,sBAA1B;AACD;;AAEM,SAASC,cAAT,OAELC,cAFK,EAGL;AAAA,MAFEC,MAEF,QAFEA,MAEF;AAAA,MACMC,EADN,GAC2BF,cAD3B,CACME,EADN;AAAA,MACUC,IADV,GAC2BH,cAD3B,CACUG,IADV;AAAA,MACgBC,MADhB,GAC2BJ,cAD3B,CACgBI,MADhB;AAGA,MAAI,CAACF,EAAL,EAAS,OAAO,kBAAP;AACT,MAAI,CAACC,IAAL,EAAW,OAAO,oBAAP;AACX,MAAI,CAACF,MAAM,CAACI,YAAZ,EAA0B,OAAO,uBAAP;;AAE1B,MAAID,MAAJ,EAAY;AACV,QACE,CAACE,MAAM,CAACC,MAAP,CAAcH,MAAd,EAAsBI,KAAtB,CACC,UAACC,KAAD;AAAA,aAAW,OAAOA,KAAP,KAAiB,QAAjB,IACA,OAAOA,KAAP,KAAiB,QADjB,IAEA,OAAOA,KAAP,KAAiB,SAF5B;AAAA,KADD,CADH,EAME;AACA,aAAO,0EAAP;AACD;AACF;AACF;;AAEM,SAASC,OAAT,GAAmB;AACxB,SAAO,IAAP;AACD;;AAEM,SAASC,MAAT,CAAgBpB,OAAhB,EAAgD;AAAA,MAC/CU,MAD+C,GACpCV,OADoC,CAC/CU,MAD+C;AAErD,+BAAsBA,MAAM,CAACI,YAA7B;AACD;;AAEM,SAASO,OAAT,CAAiBrB,OAAjB,EAAiD;AAAA,MAC9CU,MAD8C,GACnCV,OADmC,CAC9CU,MAD8C;AAEtD,+BAAsBA,MAAM,CAACI,YAA7B;AACD;;AAEM,SAASQ,iBAAT,QAAsD;AAAA,MAAzBZ,MAAyB,SAAzBA,MAAyB;AAC3D,SAAOA,MAAM,CAACa,qBAAP,EAAP;AACD;;AAEM,SAASC,eAAT,GAA2B;AAChC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,CACLzB,OADK,EAELS,cAFK,EAGG;AAAA,MACFiB,OADE,GACUjB,cADV,CACFiB,OADE;AAER,MAAMC,MAAM,GAAG,EAAf;;AAGA,MAAI,CAACD,OAAL,EAAc;AACZA,IAAAA,OAAO,GAAG;AACRE,MAAAA,YAAY,EAAE;AADN,KAAV;AAGD,GAJD,MAIO,IAAIF,OAAO,CAACE,YAAR,KAAyBC,SAA7B,EAAwC;AAC7CH,IAAAA,OAAO,CAACE,YAAR,GAAuB,IAAvB;AACD;;AAED,MAAIF,OAAJ,EAAa;AACX,QAAII,QAAQ,GAAG,EAAf;;AAEA,QAAIJ,OAAO,CAACE,YAAZ,EAA0B;AACxBE,MAAAA,QAAQ,CAACC,IAAT,CAAc,QAAd;AACD;;AAED,QAAIC,cAAc,GAAGF,QAAQ,CAACG,IAAT,CAAc,GAAd,CAArB;;AAEA,QAAID,cAAc,CAACE,MAAf,GAAwB,CAA5B,EAA+B;AAC7BP,MAAAA,MAAM,CAACD,OAAP,GAAiBM,cAAjB;AACD;AACF;;AAED,SAAOL,MAAP;AACD;;AAEM,SAASQ,WAAT,CACLnC,OADK,EAELS,cAFK,EAGG;AACR,SAAOV,qBAAqB,CAACC,OAAD,EAAUS,cAAV,CAA5B;AACD;;AAEM,SAAS2B,cAAT,CACLpC,OADK,EAELqC,cAFK,EAGW;AAChB,SAAOA,cAAP;AACD","sourcesContent":["/* @flow */\n\nimport {\n  SpacesObjectInput,\n  SpacesResponse,\n  ModulesInject,\n} from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\n\nfunction prepareMessagePayload(modules, messagePayload) {\n  let stringifiedPayload = JSON.stringify(messagePayload);\n\n  return stringifiedPayload;\n}\n\nexport function getOperation(): string {\n  return operationConstants.PNCreateSpaceOperation;\n}\n\nexport function validateParams(\n  { config }: ModulesInject,\n  incomingParams: SpacesObjectInput\n) {\n  let { id, name, custom } = incomingParams;\n\n  if (!id) return 'Missing Space.id';\n  if (!name) return 'Missing Space.name';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n\n  if (custom) {\n    if (\n      !Object.values(custom).every(\n        (value) => typeof value === 'string' ||\n                   typeof value === 'number' ||\n                   typeof value === 'boolean'\n      )\n    ) {\n      return 'Invalid custom type, only string, number and boolean values are allowed.';\n    }\n  }\n}\n\nexport function usePost() {\n  return true;\n}\n\nexport function getURL(modules: ModulesInject): string {\n  let { config } = modules;\n  return `/v1/objects/${config.subscribeKey}/spaces`;\n}\n\nexport function postURL(modules: ModulesInject): string {\n  const { config } = modules;\n  return `/v1/objects/${config.subscribeKey}/spaces`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject) {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported() {\n  return true;\n}\n\nexport function prepareParams(\n  modules: ModulesInject,\n  incomingParams: SpacesObjectInput\n): Object {\n  let { include } = incomingParams;\n  const params = {};\n\n  // default to include custom fields in response\n  if (!include) {\n    include = {\n      customFields: true\n    };\n  } else if (include.customFields === undefined) {\n    include.customFields = true;\n  }\n\n  if (include) {\n    let includes = [];\n\n    if (include.customFields) {\n      includes.push('custom');\n    }\n\n    let includesString = includes.join(',');\n\n    if (includesString.length > 0) {\n      params.include = includesString;\n    }\n  }\n\n  return params;\n}\n\nexport function postPayload(\n  modules: ModulesInject,\n  incomingParams: SpacesObjectInput\n): string {\n  return prepareMessagePayload(modules, incomingParams);\n}\n\nexport function handleResponse(\n  modules: ModulesInject,\n  spacesResponse: Object\n): SpacesResponse {\n  return spacesResponse;\n}\n"],"file":"create_space.js"}