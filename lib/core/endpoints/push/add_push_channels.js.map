{"version":3,"sources":["core/endpoints/push/add_push_channels.js"],"names":["getOperation","operationConstants","PNPushNotificationEnabledChannelsOperation","validateParams","modules","incomingParams","device","pushGateway","channels","config","length","subscribeKey","getURL","getRequestTimeout","getTransactionTimeout","isAuthSupported","prepareParams","type","add","join","handleResponse"],"mappings":";;;;;;;;;;;;;AAEA;;AACA;;;;AAEO,SAASA,YAAT,GAAgC;AACrC,SAAOC,uBAAmBC,0CAA1B;AACD;;AAEM,SAASC,cAAT,CAAwBC,OAAxB,EAAgDC,cAAhD,EAAkF;AAAA,MACjFC,MADiF,GAC/CD,cAD+C,CACjFC,MADiF;AAAA,MACzEC,WADyE,GAC/CF,cAD+C,CACzEE,WADyE;AAAA,MAC5DC,QAD4D,GAC/CH,cAD+C,CAC5DG,QAD4D;AAAA,MAEjFC,MAFiF,GAEtEL,OAFsE,CAEjFK,MAFiF;AAIvF,MAAI,CAACH,MAAL,EAAa,OAAO,4BAAP;AACb,MAAI,CAACC,WAAL,EAAkB,OAAO,4CAAP;AAClB,MAAI,CAACC,QAAD,IAAaA,QAAQ,CAACE,MAAT,KAAoB,CAArC,EAAwC,OAAO,kBAAP;AACxC,MAAI,CAACD,MAAM,CAACE,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAASC,MAAT,CAAgBR,OAAhB,EAAwCC,cAAxC,EAAkF;AAAA,MACjFC,MADiF,GACtED,cADsE,CACjFC,MADiF;AAAA,MAEjFG,MAFiF,GAEtEL,OAFsE,CAEjFK,MAFiF;AAGvF,oCAA2BA,MAAM,CAACE,YAAlC,sBAA0DL,MAA1D;AACD;;AAEM,SAASO,iBAAT,OAAsD;AAAA,MAAzBJ,MAAyB,QAAzBA,MAAyB;AAC3D,SAAOA,MAAM,CAACK,qBAAP,EAAP;AACD;;AAEM,SAASC,eAAT,GAA2B;AAChC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,CAAuBZ,OAAvB,EAA+CC,cAA/C,EAAyF;AAAA,MACxFE,WADwF,GACzDF,cADyD,CACxFE,WADwF;AAAA,8BACzDF,cADyD,CAC3EG,QAD2E;AAAA,MAC3EA,QAD2E,sCAChE,EADgE;AAE9F,SAAO;AAAES,IAAAA,IAAI,EAAEV,WAAR;AAAqBW,IAAAA,GAAG,EAAEV,QAAQ,CAACW,IAAT,CAAc,GAAd;AAA1B,GAAP;AACD;;AAEM,SAASC,cAAT,GAAkC;AACvC,SAAO,EAAP;AACD","sourcesContent":["/* @flow */\n\nimport { ModifyDeviceArgs, ModulesInject } from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\n\nexport function getOperation(): string {\n  return operationConstants.PNPushNotificationEnabledChannelsOperation;\n}\n\nexport function validateParams(modules: ModulesInject, incomingParams: ModifyDeviceArgs) {\n  let { device, pushGateway, channels } = incomingParams;\n  let { config } = modules;\n\n  if (!device) return 'Missing Device ID (device)';\n  if (!pushGateway) return 'Missing GW Type (pushGateway: gcm or apns)';\n  if (!channels || channels.length === 0) return 'Missing Channels';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules: ModulesInject, incomingParams: ModifyDeviceArgs): string {\n  let { device } = incomingParams;\n  let { config } = modules;\n  return `/v1/push/sub-key/${config.subscribeKey}/devices/${device}`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject) {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported() {\n  return true;\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: ModifyDeviceArgs): Object {\n  let { pushGateway, channels = [] } = incomingParams;\n  return { type: pushGateway, add: channels.join(',') };\n}\n\nexport function handleResponse(): Object {\n  return {};\n}\n"],"file":"add_push_channels.js"}