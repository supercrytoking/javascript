{"version":3,"sources":["core/endpoints/presence/leave.js"],"names":["getOperation","validateParams","getURL","getRequestTimeout","isAuthSupported","prepareParams","handleResponse","modules","config","subscribeKey","incomingParams","channels","stringifiedChannels","length","join","encodeURIComponent","getTransactionTimeout","channelGroups","params"],"mappings":";;;;;QAIgBA,Y,GAAAA,Y;QAIAC,c,GAAAA,c;QAMAC,M,GAAAA,M;QAOAC,iB,GAAAA,iB;QAIAC,e,GAAAA,e;QAIAC,a,GAAAA,a;QAWAC,c,GAAAA,c;;AAtChB;;AAEO,SAASN,YAAT,GAAgC;AACrC,SAAO,wBAAP;AACD;;AAEM,SAASC,cAAT,CAAwBM,OAAxB,EAAgD;AAAA,MAC/CC,MAD+C,GACpCD,OADoC,CAC/CC,MAD+C;;;AAGrD,MAAI,CAACA,OAAOC,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAASP,MAAT,CAAgBK,OAAhB,EAAwCG,cAAxC,EAAgF;AAAA,MAC/EF,MAD+E,GACpED,OADoE,CAC/EC,MAD+E;AAAA,8BAE7DE,cAF6D,CAE/EC,QAF+E;AAAA,MAE/EA,QAF+E,yCAEpE,EAFoE;;AAGrF,MAAIC,sBAAsBD,SAASE,MAAT,GAAkB,CAAlB,GAAsBF,SAASG,IAAT,CAAc,GAAd,CAAtB,GAA2C,GAArE;AACA,SAAO,0BAA0BN,OAAOC,YAAjC,GAAgD,WAAhD,GAA8DM,mBAAmBH,mBAAnB,CAA9D,GAAwG,QAA/G;AACD;;AAEM,SAAST,iBAAT,OAAsD;AAAA,MAAzBK,MAAyB,QAAzBA,MAAyB;;AAC3D,SAAOA,OAAOQ,qBAAP,EAAP;AACD;;AAEM,SAASZ,eAAT,GAA2B;AAChC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,CAAuBE,OAAvB,EAA+CG,cAA/C,EAAuF;AAAA,+BAC/DA,cAD+D,CACtFO,aADsF;AAAA,MACtFA,aADsF,0CACtE,EADsE;;AAE5F,MAAIC,SAAS,EAAb;;AAEA,MAAID,cAAcJ,MAAd,GAAuB,CAA3B,EAA8B;AAC5BK,WAAO,eAAP,IAA0BD,cAAcH,IAAd,CAAmB,GAAnB,CAA1B;AACD;;AAED,SAAOI,MAAP;AACD;;AAEM,SAASZ,cAAT,GAAkC;AACvC,SAAO,EAAP;AACD","file":"core/endpoints/presence/leave.js","sourcesContent":["/* @flow */\n\nimport { LeaveArguments, ModulesInject } from '../../flow_interfaces';\n\nexport function getOperation(): string {\n  return 'PNUnsubscribeOperation';\n}\n\nexport function validateParams(modules: ModulesInject) {\n  let { config } = modules;\n\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules: ModulesInject, incomingParams: LeaveArguments): string {\n  let { config } = modules;\n  let { channels = [] } = incomingParams;\n  let stringifiedChannels = channels.length > 0 ? channels.join(',') : ',';\n  return '/v2/presence/sub-key/' + config.subscribeKey + '/channel/' + encodeURIComponent(stringifiedChannels) + '/leave';\n}\n\nexport function getRequestTimeout({ config }: ModulesInject) {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported() {\n  return true;\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: LeaveArguments): Object {\n  let { channelGroups = [] } = incomingParams;\n  let params = {};\n\n  if (channelGroups.length > 0) {\n    params['channel-group'] = channelGroups.join(',');\n  }\n\n  return params;\n}\n\nexport function handleResponse(): Object {\n  return {};\n}\n"],"sourceRoot":"/source/"}