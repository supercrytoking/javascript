{"version":3,"sources":["core/endpoints/access.js"],"names":[],"mappings":"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","file":"core/endpoints/access.js","sourcesContent":["/* @flow */\n\nimport Networking from '../components/networking';\nimport Config from '../components/config';\nimport Crypto from '../components/cryptography';\nimport BaseEndpoint from './base.js';\nimport utils from '../utils.js';\n\nimport { endpointDefinition, statusStruct } from '../flow_interfaces';\n\ntype accessConstruct = {\n  networking: Networking,\n  config: Config,\n  crypto: Crypto\n};\n\ntype auditArguments = {\n  channel: string,\n  channelGroup: string,\n  authKeys: Array<string>,\n}\n\ntype grantArguments = {\n  channels: Array<string>,\n  channelGroups: Array<string>,\n  ttl: number,\n  read: boolean,\n  write: boolean,\n  manage: boolean,\n  authKeys: Array<string>\n}\n\nexport default class extends BaseEndpoint {\n  _networking: Networking;\n  _config: Config;\n  _crypto: Crypto;\n\n  constructor({ networking, config, crypto }: accessConstruct) {\n    super({ config });\n    this._networking = networking;\n    this._config = config;\n    this._crypto = crypto;\n  }\n\n  grant(args: grantArguments, callback: Function) {\n    const { channels = [], channelGroups = [], ttl, read = false, write = false, manage = false, authKeys = [] } = args;\n    const endpointConfig: endpointDefinition = {\n      params: {\n        subscribeKey: { required: true },\n        publishKey: { required: true },\n        uuid: { required: true }\n      },\n      url: '/v1/auth/grant/sub-key/' + this._config.subscribeKey\n    };\n\n    if (!callback) return this.log('Missing Callback');\n\n    // validate this request and return false if stuff is missing\n    if (!this.validateEndpointConfig(endpointConfig)) { return; }\n    // create base params\n    const params = this.createBaseParams(endpointConfig);\n\n    params.r = (read) ? '1' : '0';\n    params.w = (write) ? '1' : '0';\n    params.m = (manage) ? '1' : '0';\n    params.timestamp = Math.floor(new Date().getTime() / 1000);\n\n    if (channels.length > 0) {\n      params.channel = channels.join(',');\n    }\n\n    if (channelGroups.length > 0) {\n      params['channel-group'] = channelGroups.join(',');\n    }\n\n    if (authKeys.length > 0) {\n      params.auth = authKeys.join(',');\n    }\n\n    if (ttl || ttl === 0) {\n      params.ttl = ttl;\n    }\n\n    let signInput = this._config.subscribeKey + '\\n' + this._config.publishKey + '\\ngrant\\n';\n    signInput += utils.signPamFromParams(params);\n\n    params.signature = this._crypto.HMACSHA256(signInput);\n\n    this._networking.GET(params, endpointConfig, (status: statusStruct, payload: Object) => {\n      if (status.error) return callback(status);\n      callback(status, payload.payload);\n    });\n  }\n\n  audit(args: auditArguments, callback: Function) {\n    const { channel, channelGroup, authKeys = [] } = args;\n    const endpointConfig: endpointDefinition = {\n      params: {\n        subscribeKey: { required: true },\n        publishKey: { required: true },\n        uuid: { required: true }\n      },\n      url: '/v1/auth/audit/sub-key/' + this._config.subscribeKey\n    };\n\n    // Make sure we have a Channel\n    if (!callback) return this.log('Missing Callback');\n\n    // validate this request and return false if stuff is missing\n    if (!this.validateEndpointConfig(endpointConfig)) { return; }\n    // create base params\n    const params = this.createBaseParams(endpointConfig);\n\n    params.timestamp = Math.floor(new Date().getTime() / 1000);\n\n    if (channel) {\n      params.channel = channel;\n    }\n\n    if (channelGroup) {\n      params['channel-group'] = channelGroup;\n    }\n\n    if (authKeys.length > 0) {\n      params.auth = authKeys.join(',');\n    }\n\n    let signInput = this._config.subscribeKey + '\\n' + this._config.publishKey + '\\naudit\\n';\n    signInput += utils.signPamFromParams(params);\n\n    params.signature = this._crypto.HMACSHA256(signInput);\n\n    this._networking.GET(params, endpointConfig, (status: statusStruct, payload: Object) => {\n      if (status.error) return callback(status);\n      callback(status, payload.payload);\n    });\n  }\n}\n"],"sourceRoot":"/source/"}