{"version":3,"sources":["core/endpoints/file_upload/get_file_url.js"],"names":["modules","channel","id","name","config","PubNubError","url","subscribeKey","params","uuid","getUUID","pnsdk","getAuthKey","auth","secretKey","getOperation","queryParams","Object","keys","map","key","encodeURIComponent","join","origin"],"mappings":";;;;;;;AAEA;;eAIe,kBAACA,OAAD,QAAiF;AAAA,MAA5DC,OAA4D,QAA5DA,OAA4D;AAAA,MAAnDC,EAAmD,QAAnDA,EAAmD;AAAA,MAA/CC,IAA+C,QAA/CA,IAA+C;AAAA,MACtFC,MADsF,GAC3EJ,OAD2E,CACtFI,MADsF;;AAG9F,MAAI,CAACH,OAAL,EAAc;AACZ,UAAM,IAAII,qBAAJ,CACJ,6CADI,EAEJ,qCAAsB,wBAAtB,CAFI,CAAN;AAID;;AAED,MAAI,CAACH,EAAL,EAAS;AACP,UAAM,IAAIG,qBAAJ,CACJ,6CADI,EAEJ,qCAAsB,wBAAtB,CAFI,CAAN;AAID;;AAED,MAAI,CAACF,IAAL,EAAW;AACT,UAAM,IAAIE,qBAAJ,CACJ,6CADI,EAEJ,qCAAsB,0BAAtB,CAFI,CAAN;AAID;;AAED,MAAMC,GAAG,uBAAgBF,MAAM,CAACG,YAAvB,uBAAgDN,OAAhD,oBAAiEC,EAAjE,cAAuEC,IAAvE,CAAT;AACA,MAAMK,MAAM,GAAG,EAAf;AAEAA,EAAAA,MAAM,CAACC,IAAP,GAAcL,MAAM,CAACM,OAAP,EAAd;AACAF,EAAAA,MAAM,CAACG,KAAP,GAAe,6BAAcP,MAAd,CAAf;;AAEA,MAAIA,MAAM,CAACQ,UAAP,EAAJ,EAAyB;AACvBJ,IAAAA,MAAM,CAACK,IAAP,GAAcT,MAAM,CAACQ,UAAP,EAAd;AACD;;AAED,MAAIR,MAAM,CAACU,SAAX,EAAsB;AACpB,+BAAYd,OAAZ,EAAqBM,GAArB,EAA0BE,MAA1B,EAAkC,EAAlC,EAAsC;AACpCO,MAAAA,YAAY,EAAE;AAAA,eAAM,2BAAN;AAAA;AADsB,KAAtC;AAGD;;AAED,MAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYV,MAAZ,EAAoBW,GAApB,CAAwB,UAACC,GAAD;AAAA,qBAAYC,kBAAkB,CAACD,GAAD,CAA9B,cAAuCC,kBAAkB,CAACb,MAAM,CAACY,GAAD,CAAP,CAAzD;AAAA,GAAxB,EAAkGE,IAAlG,CAAuG,GAAvG,CAApB;;AAEA,MAAIN,WAAW,KAAK,EAApB,EAAwB;AACtB,6BAAkBZ,MAAM,CAACmB,MAAzB,SAAkCjB,GAAlC,cAAyCU,WAAzC;AACD;;AAED,2BAAkBZ,MAAM,CAACmB,MAAzB,SAAkCjB,GAAlC;AACD,C","sourcesContent":["/** @flow */\n\nimport { PubNubError, createValidationError, signRequest, generatePNSDK } from '../../components/endpoint';\nimport type { Modules } from '../endpoint';\nimport type { GetFileUrlParams, GetFileUrlResult } from './types';\n\nexport default (modules: Modules, { channel, id, name }: GetFileUrlParams): GetFileUrlResult => {\n  const { config } = modules;\n\n  if (!channel) {\n    throw new PubNubError(\n      'Validation failed, check status for details',\n      createValidationError(\"channel can't be empty\")\n    );\n  }\n\n  if (!id) {\n    throw new PubNubError(\n      'Validation failed, check status for details',\n      createValidationError(\"file id can't be empty\")\n    );\n  }\n\n  if (!name) {\n    throw new PubNubError(\n      'Validation failed, check status for details',\n      createValidationError(\"file name can't be empty\")\n    );\n  }\n\n  const url = `/v1/files/${config.subscribeKey}/channels/${channel}/files/${id}/${name}`;\n  const params = {};\n\n  params.uuid = config.getUUID();\n  params.pnsdk = generatePNSDK(config);\n\n  if (config.getAuthKey()) {\n    params.auth = config.getAuthKey();\n  }\n\n  if (config.secretKey) {\n    signRequest(modules, url, params, {}, {\n      getOperation: () => 'PubNubGetFileUrlOperation',\n    });\n  }\n\n  const queryParams = Object.keys(params).map((key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`).join('&');\n\n  if (queryParams !== '') {\n    return `https://${config.origin}${url}?${queryParams}`;\n  }\n\n  return `https://${config.origin}${url}`;\n};\n"],"file":"get_file_url.js"}