{"version":3,"sources":["core/components/endpoint.js"],"names":["modules","endpoint","networking","config","crypto","callback","incomingParams","getOperation","PNTimeOperation","PNChannelGroupsOperation","validationResult","validateParams","createValidationError","outgoingParams","prepareParams","uuid","UUID","pnsdk","generatePNSDK","useInstanceId","instanceid","instanceId","useRequestId","requestid","v4","isAuthSupported","getAuthKey","auth","PNAccessManagerGrant","signInput","subscribeKey","publishKey","signPamFromParams","signature","HMACSHA256","PNAccessManagerAudit","onResponse","status","payload","error","handleResponse","callInstance","usePost","url","postURL","networkingParams","operation","timeout","getRequestTimeout","postPayload","POST","getURL","GET","PNSubscribeOperation","createError","errorPayload","type","message","base","sdkFamily","partnerId","getVersion"],"mappings":"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","file":"core/components/endpoint.js","sourcesContent":["import { StatusAnnouncement } from '../flow_interfaces';\nimport uuidGenerator from 'uuid';\nimport utils from '../utils';\nimport Config from './config';\nimport operationConstants from '../constants/operations';\n\nfunction createError(errorPayload: Object, type: string): Object {\n  errorPayload.type = type;\n  return errorPayload;\n}\n\nfunction createValidationError(message: string): Object {\n  return createError({ message }, 'validationError');\n}\n\nfunction generatePNSDK(config: Config): string {\n  let base = 'PubNub-JS-' + config.sdkFamily;\n\n  if (config.partnerId) {\n    base += '-' + config.partnerId;\n  }\n\n  base += '/' + config.getVersion();\n\n  return base;\n}\n\nexport default function (modules, endpoint, ...args) {\n  let { networking, config, crypto } = modules;\n  let callback = null;\n  let incomingParams = {};\n\n  if (endpoint.getOperation() === operationConstants.PNTimeOperation || endpoint.getOperation() === operationConstants.PNChannelGroupsOperation) {\n    callback = args[0];\n  } else {\n    incomingParams = args[0];\n    callback = args[1];\n  }\n\n  let validationResult = endpoint.validateParams(modules, incomingParams);\n\n  if (validationResult) {\n    callback(createValidationError(validationResult));\n    return;\n  }\n\n  let outgoingParams = endpoint.prepareParams(modules, incomingParams);\n\n  outgoingParams.uuid = config.UUID;\n  outgoingParams.pnsdk = generatePNSDK(config);\n\n  if (config.useInstanceId) {\n    outgoingParams.instanceid = config.instanceId;\n  }\n\n  if (config.useRequestId) {\n    outgoingParams.requestid = uuidGenerator.v4();\n  }\n\n  if (endpoint.isAuthSupported() && config.getAuthKey()) {\n    outgoingParams.auth = config.getAuthKey();\n  }\n\n  // encrypt the params\n  if (endpoint.getOperation() === operationConstants.PNAccessManagerGrant) {\n    let signInput = config.subscribeKey + '\\n' + config.publishKey + '\\ngrant\\n';\n    signInput += utils.signPamFromParams(outgoingParams);\n    outgoingParams.signature = crypto.HMACSHA256(signInput);\n  }\n\n  if (endpoint.getOperation() === operationConstants.PNAccessManagerAudit) {\n    let signInput = config.subscribeKey + '\\n' + config.publishKey + '\\naudit\\n';\n    signInput += utils.signPamFromParams(outgoingParams);\n    outgoingParams.signature = crypto.HMACSHA256(signInput);\n  }\n\n  let onResponse = (status: StatusAnnouncement, payload: Object) => {\n    if (callback) {\n      if (status.error) return callback(status);\n\n      callback(status, endpoint.handleResponse(modules, payload, incomingParams));\n    }\n  };\n\n  let callInstance;\n\n  if (endpoint.usePost && endpoint.usePost(modules, incomingParams)) {\n    let url = endpoint.postURL(modules, incomingParams);\n    let networkingParams = { url,\n      operation: endpoint.getOperation(),\n      timeout: endpoint.getRequestTimeout(modules)\n    };\n    let payload = endpoint.postPayload(modules, incomingParams);\n    callInstance = networking.POST(outgoingParams, payload, networkingParams, onResponse);\n  } else {\n    let url = endpoint.getURL(modules, incomingParams);\n    let networkingParams = { url,\n      operation: endpoint.getOperation(),\n      timeout: endpoint.getRequestTimeout(modules)\n    };\n    callInstance = networking.GET(outgoingParams, networkingParams, onResponse);\n  }\n\n  if (endpoint.getOperation() === operationConstants.PNSubscribeOperation) {\n    return callInstance;\n  }\n}\n"],"sourceRoot":"/source/"}