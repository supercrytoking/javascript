{"version":3,"sources":["core/pubnub-common.js"],"names":[],"mappings":"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","file":"core/pubnub-common.js","sourcesContent":["/* @flow */\n\nimport Networking from './components/networking';\nimport Config from './components/config';\nimport Crypto from './components/cryptography/index';\nimport SubscriptionManager from './components/subscription_manager';\nimport ListenerManager from './components/listener_manager';\n\nimport packageJSON from '../../package.json';\n\nimport TimeEndpoint from './endpoints/time';\nimport PresenceEndpoints from './endpoints/presence';\nimport HistoryEndpoint from './endpoints/history';\nimport PushEndpoint from './endpoints/push';\nimport AccessEndpoints from './endpoints/access';\nimport ChannelGroupEndpoints from './endpoints/channel_groups';\nimport SubscribeEndpoints from './endpoints/subscribe';\nimport PublishEndpoints from './endpoints/publish';\n\nimport { InternalSetupStruct } from './flow_interfaces';\n\nexport default class {\n\n  _config: Config;\n  _crypto: Crypto;\n  _networking: Networking;\n\n  // tell flow about the mounted endpoint\n  time: Function;\n  publish: Function;\n  fire: Function;\n  history: Function;\n  //\n  channelGroups: Object;\n  //\n  push: Object;\n  //\n  hereNow: Function;\n  whereNow: Function;\n  getState: Function;\n  setState: Function;\n  //\n  grant: Function;\n  audit: Function;\n  //\n  subscribe: Function;\n  unsubscribe: Function;\n  reconnect: Function;\n  stop: Function;\n\n  addListener: Function;\n  removeListener: Function;\n\n  getAuthKey: Function;\n  setAuthKey: Function;\n\n  setCipherKey: Function;\n  setUUID: Function;\n  getUUID: Function;\n\n  //\n\n  constructor(setup: InternalSetupStruct) {\n    let { sendBeacon, db } = setup;\n\n    this._config = new Config({ setup, db });\n    this._crypto = new Crypto({ config: this._config });\n    this._networking = new Networking({ config: this._config, crypto: this._crypto, sendBeacon });\n\n    const subscribeEndpoints = new SubscribeEndpoints({ networking: this._networking, config: this._config });\n    const presenceEndpoints = new PresenceEndpoints({ networking: this._networking, config: this._config });\n    const timeEndpoint = new TimeEndpoint({ networking: this._networking, config: this._config });\n    const pushEndpoints = new PushEndpoint({ networking: this._networking, config: this._config });\n    const channelGroupEndpoints = new ChannelGroupEndpoints({ networking: this._networking, config: this._config });\n    const publishEndpoints = new PublishEndpoints({ networking: this._networking, config: this._config, crypto: this._crypto });\n    const historyEndpoint = new HistoryEndpoint({ networking: this._networking, config: this._config, crypto: this._crypto });\n    const accessEndpoints = new AccessEndpoints({ config: this._config, networking: this._networking, crypto: this._crypto });\n\n    const listenerManager = new ListenerManager();\n    const subscriptionManager = new SubscriptionManager({ config: this._config, listenerManager, subscribeEndpoints, presenceEndpoints });\n\n    this.addListener = listenerManager.addListener.bind(listenerManager);\n    this.removeListener = listenerManager.removeListener.bind(listenerManager);\n\n    /** channel groups **/\n    this.channelGroups = {\n      listGroups: channelGroupEndpoints.listGroups.bind(channelGroupEndpoints),\n      listChannels: channelGroupEndpoints.listChannels.bind(channelGroupEndpoints),\n      addChannels: channelGroupEndpoints.addChannels.bind(channelGroupEndpoints),\n      removeChannels: channelGroupEndpoints.removeChannels.bind(channelGroupEndpoints),\n      deleteGroup: channelGroupEndpoints.deleteGroup.bind(channelGroupEndpoints)\n    };\n    /** push **/\n    this.push = {\n      addChannels: pushEndpoints.addDeviceToPushChannels.bind(pushEndpoints),\n      removeChannels: pushEndpoints.removeDeviceFromPushChannels.bind(pushEndpoints),\n      deleteDevice: pushEndpoints.removeDevice.bind(pushEndpoints),\n      listChannels: pushEndpoints.listChannelsForDevice.bind(pushEndpoints)\n    };\n    /** presence **/\n    this.hereNow = presenceEndpoints.hereNow.bind(presenceEndpoints);\n    this.whereNow = presenceEndpoints.whereNow.bind(presenceEndpoints);\n    this.getState = presenceEndpoints.getState.bind(presenceEndpoints);\n    this.setState = subscriptionManager.adaptStateChange.bind(subscriptionManager);\n    /** PAM **/\n    this.grant = accessEndpoints.grant.bind(accessEndpoints);\n    this.audit = accessEndpoints.audit.bind(accessEndpoints);\n    //\n    this.publish = publishEndpoints.publish.bind(publishEndpoints);\n    this.fire = publishEndpoints.fire.bind(publishEndpoints);\n    this.history = historyEndpoint.fetch.bind(historyEndpoint);\n    this.time = timeEndpoint.fetch.bind(timeEndpoint);\n    // subscription related methods\n    this.subscribe = subscriptionManager.adaptSubscribeChange.bind(subscriptionManager);\n    this.unsubscribe = subscriptionManager.adaptUnsubscribeChange.bind(subscriptionManager);\n    this.reconnect = subscriptionManager.reconnect.bind(subscriptionManager);\n    this.stop = subscriptionManager.disconnect.bind(subscriptionManager);\n    this.reconnect = subscriptionManager.reconnect.bind(SubscriptionManager);\n    /** config **/\n    this.getAuthKey = this._config.getAuthKey.bind(this._config);\n    this.setAuthKey = this._config.setAuthKey.bind(this._config);\n\n    this.setCipherKey = this._config.setCipherKey.bind(this._config);\n    this.getUUID = this._config.getUUID.bind(this._config);\n    this.setUUID = this._config.setUUID.bind(this._config);\n  }\n\n\n  getVersion(): String { return packageJSON.version; }\n\n}\n"],"sourceRoot":"/source/"}