{"version":3,"sources":["core/endpoints/objects/uuid/remove.js"],"names":["endpoint","getOperation","operationConstants","PNRemoveUUIDMetadataOperation","validateParams","getURL","params","config","subscribeKey","utils","encodeString","uuid","getUUID","useDelete","getRequestTimeout","getTransactionTimeout","isAuthSupported","getAuthToken","tokenManager","getToken","prepareParams","handleResponse","_","response","status","data"],"mappings":";;;;;;;;;AAGA;;AAEA;;AAWA,IAAMA,QAA4E,GAAG;AACnFC,EAAAA,YAAY,EAAE;AAAA,WAAMC,uBAAmBC,6BAAzB;AAAA,GADqE;AAInFC,EAAAA,cAAc,EAAE,0BAAM,CAAE,CAJ2D;AAMnFC,EAAAA,MAAM,EAAE,sBAAaC,MAAb;AAAA;;AAAA,QAAGC,MAAH,QAAGA,MAAH;AAAA,iCAAuCA,MAAM,CAACC,YAA9C,oBAAoEC,kBAAMC,YAAN,iBAAmBJ,MAAnB,aAAmBA,MAAnB,uBAAmBA,MAAM,CAAEK,IAA3B,uDAAmCJ,MAAM,CAACK,OAAP,EAAnC,CAApE;AAAA,GAN2E;AAOnFC,EAAAA,SAAS,EAAE;AAAA,WAAM,IAAN;AAAA,GAPwE;AASnFC,EAAAA,iBAAiB,EAAE;AAAA,QAAGP,MAAH,SAAGA,MAAH;AAAA,WAAgBA,MAAM,CAACQ,qBAAP,EAAhB;AAAA,GATgE;AAWnFC,EAAAA,eAAe,EAAE;AAAA,WAAM,IAAN;AAAA,GAXkE;AAanFC,EAAAA,YAAY,EAAE;AAAA,QAAGC,YAAH,SAAGA,YAAH;AAAA,WAAsBA,YAAY,CAACC,QAAb,CAAsB,MAAtB,CAAtB;AAAA,GAbqE;AAenFC,EAAAA,aAAa,EAAE,8BAAad,MAAb;AAAA;;AAAA,QAAGC,MAAH,SAAGA,MAAH;AAAA,WAAyB;AACtCI,MAAAA,IAAI,mBAAEL,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEK,IAAV,yDAAkBJ,MAAM,CAACK,OAAP;AADgB,KAAzB;AAAA,GAfoE;AAmBnFS,EAAAA,cAAc,EAAE,wBAACC,CAAD,EAAIC,QAAJ;AAAA,WAAkB;AAChCC,MAAAA,MAAM,EAAED,QAAQ,CAACC,MADe;AAEhCC,MAAAA,IAAI,EAAEF,QAAQ,CAACE;AAFiB,KAAlB;AAAA;AAnBmE,CAArF;eAyBezB,Q","sourcesContent":["/** @flow */\n\nimport type { EndpointConfig } from '../../endpoint';\nimport operationConstants from '../../../constants/operations';\nimport type { UUIDMetadata } from './uuid';\nimport utils from '../../../utils';\n\nexport type RemoveUUIDMetadataParams = {|\n  uuid?: string,\n|};\n\nexport type RemoveUUIDMetadataResult = {|\n  status: 200,\n  data: UUIDMetadata,\n|};\n\nconst endpoint: EndpointConfig<RemoveUUIDMetadataParams, RemoveUUIDMetadataResult> = {\n  getOperation: () => operationConstants.PNRemoveUUIDMetadataOperation,\n\n  // No required parameters.\n  validateParams: () => {},\n\n  getURL: ({ config }, params) => `/v2/objects/${config.subscribeKey}/uuids/${utils.encodeString(params?.uuid ?? config.getUUID())}`,\n  useDelete: () => true,\n\n  getRequestTimeout: ({ config }) => config.getTransactionTimeout(),\n\n  isAuthSupported: () => true,\n\n  getAuthToken: ({ tokenManager }) => tokenManager.getToken('user'),\n\n  prepareParams: ({ config }, params) => ({\n    uuid: params?.uuid ?? config.getUUID(),\n  }),\n\n  handleResponse: (_, response) => ({\n    status: response.status,\n    data: response.data,\n  }),\n};\n\nexport default endpoint;\n"],"file":"remove.js"}