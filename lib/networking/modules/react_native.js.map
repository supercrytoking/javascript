{"version":3,"sources":["networking/modules/react_native.js"],"names":["postfileuri","url","fields","fileInput","formData","FormData","forEach","key","value","append","fetch","method","body","result","postfile","uri","getfile","params","endpoint","callback","superagentConstruct","superagent","get","getStandardOrigin","set","headers","query","xdr","call"],"mappings":";;;;;;;;;;;;;;AAIA;;AACA;;AACA;;SAEeA,W;;;;;iFAAf,iBACEC,GADF,EAEEC,MAFF,EAGEC,SAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAKQC,YAAAA,QALR,GAKmB,IAAIC,QAAJ,EALnB;AAOEH,YAAAA,MAAM,CAACI,OAAP,CAAe,gBAAoB;AAAA,kBAAjBC,GAAiB,QAAjBA,GAAiB;AAAA,kBAAZC,KAAY,QAAZA,KAAY;AACjCJ,cAAAA,QAAQ,CAACK,MAAT,CAAgBF,GAAhB,EAAqBC,KAArB;AACD,aAFD;AAIAJ,YAAAA,QAAQ,CAACK,MAAT,CAAgB,MAAhB,EAAwBN,SAAxB;AAXF;AAAA,mBAauBO,KAAK,CAACT,GAAD,EAAM;AAC9BU,cAAAA,MAAM,EAAE,MADsB;AAE9BC,cAAAA,IAAI,EAAER;AAFwB,aAAN,CAb5B;;AAAA;AAaQS,YAAAA,MAbR;AAAA,6CAkBSA,MAlBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAqBsBC,Q;;;;;8EAAf,kBACLb,GADK,EAELC,MAFK,EAGLC,SAHK;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKAA,SAAS,CAACY,GALV;AAAA;AAAA;AAAA;;AAAA,8CAMI,uBAAgBd,GAAhB,EAAqBC,MAArB,EAA6BC,SAA7B,CANJ;;AAAA;AAAA,8CAQIH,WAAW,CAACC,GAAD,EAAMC,MAAN,EAAcC,SAAd,CARf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAYA,SAASa,OAAT,CAAiBC,MAAjB,EAAiCC,QAAjC,EAA+DC,QAA/D,EAAiG;AACtG,MAAIC,mBAAmB,GAAGC,uBACvBC,GADuB,CACnB,KAAKC,iBAAL,KAA2BL,QAAQ,CAACjB,GADjB,EAEvBuB,GAFuB,CAEnBN,QAAQ,CAACO,OAFU,EAGvBC,KAHuB,CAGjBT,MAHiB,CAA1B;;AAIA,SAAOU,aAAIC,IAAJ,CAAS,IAAT,EAAeR,mBAAf,EAAoCF,QAApC,EAA8CC,QAA9C,CAAP;AACD","sourcesContent":["/* @flow */\n/* global FormData */\n/* global fetch */\n\nimport superagent from 'superagent';\nimport { EndpointDefinition } from '../../core/flow_interfaces';\nimport { xdr, postfile as postfilewebnode } from './web-node';\n\nasync function postfileuri(\n  url: string,\n  fields: $ReadOnlyArray<{ key: string, value: string }>,\n  fileInput: any\n): Promise<any> {\n  const formData = new FormData();\n\n  fields.forEach(({ key, value }) => {\n    formData.append(key, value);\n  });\n\n  formData.append('file', fileInput);\n\n  const result = await fetch(url, {\n    method: 'POST',\n    body: formData\n  });\n\n  return result;\n}\n\nexport async function postfile(\n  url: string,\n  fields: $ReadOnlyArray<{ key: string, value: string }>,\n  fileInput: any\n): Promise<any> {\n  if (!fileInput.uri) {\n    return postfilewebnode(url, fields, fileInput);\n  } else {\n    return postfileuri(url, fields, fileInput);\n  }\n}\n\nexport function getfile(params: Object, endpoint: EndpointDefinition, callback: Function): Promise<any> {\n  let superagentConstruct = superagent\n    .get(this.getStandardOrigin() + endpoint.url)\n    .set(endpoint.headers)\n    .query(params);\n  return xdr.call(this, superagentConstruct, endpoint, callback);\n}\n"],"file":"react_native.js"}