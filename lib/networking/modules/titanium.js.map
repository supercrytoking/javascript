{"version":3,"sources":["networking/modules/titanium.js"],"names":["log","url","qs","res","_pickLogger","Ti","API","window","console","start","Date","getTime","timestamp","toISOString","logger","now","elapsed","timestampDone","getHttpClient","Platform","osname","XMLHttpRequest","Network","createHTTPClient","keepAlive","xhr","_config","enableKeepAlive","xdr","method","params","body","endpoint","callback","status","operation","open","call","onload","error","statusCode","resp","JSON","parse","responseText","logVerbosity","onerror","e","errorData","category","_detectErrorCategory","timeout","Infinity","send","get","getStandardOrigin","post","del"],"mappings":"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","sourcesContent":["/* @flow */\n/* global XMLHttpRequest, window */\n\nimport {\n  EndpointDefinition,\n  StatusAnnouncement,\n} from '../../core/flow_interfaces';\nimport { buildUrl } from '../utils';\n\ndeclare var Ti: any;\n\nfunction log(url, qs, res) {\n  let _pickLogger = () => {\n    if (Ti && Ti.API && Ti.API.log) return Ti.API; // eslint-disable-line no-console\n    if (window && window.console && window.console.log) return window.console;\n    return console;\n  };\n\n  let start = new Date().getTime();\n  let timestamp = new Date().toISOString();\n  let logger = _pickLogger();\n  logger.log('<<<<<'); // eslint-disable-line no-console\n  logger.log(`[${timestamp}]`, '\\n', url, '\\n', qs); // eslint-disable-line no-console\n  logger.log('-----'); // eslint-disable-line no-console\n\n  let now = new Date().getTime();\n  let elapsed = now - start;\n  let timestampDone = new Date().toISOString();\n\n  logger.log('>>>>>>'); // eslint-disable-line no-console\n  logger.log(`[${timestampDone} / ${elapsed}]`, '\\n', url, '\\n', qs, '\\n', res); // eslint-disable-line no-console\n  logger.log('-----');\n}\n\nfunction getHttpClient(): any {\n  if (Ti.Platform.osname === 'mobileweb') {\n    return new XMLHttpRequest();\n  } else {\n    return Ti.Network.createHTTPClient();\n  }\n}\n\nfunction keepAlive(xhr: any): void {\n  if (Ti.Platform.osname !== 'mobileweb' && this._config.keepAlive) {\n    xhr.enableKeepAlive = true;\n  }\n}\n\nfunction xdr(\n  xhr: any,\n  method: string,\n  url: string,\n  params: Object,\n  body: Object,\n  endpoint: EndpointDefinition,\n  callback: Function\n): void {\n  let status: StatusAnnouncement = {};\n  status.operation = endpoint.operation;\n\n  xhr.open(method, buildUrl(url, params), true);\n\n  keepAlive.call(this, xhr);\n\n  xhr.onload = () => {\n    status.error = false;\n\n    if (xhr.status) {\n      status.statusCode = xhr.status;\n    }\n\n    let resp = JSON.parse(xhr.responseText);\n\n    if (this._config.logVerbosity) {\n      log(url, params, xhr.responseText);\n    }\n\n    return callback(status, resp);\n  };\n\n  xhr.onerror = (e) => {\n    status.error = true;\n    status.errorData = e.error;\n    status.category = this._detectErrorCategory(e.error);\n    return callback(status, null);\n  };\n\n  xhr.timeout = Ti.Platform.osname === 'android' ? 2147483647 : Infinity;\n\n  xhr.send(body);\n}\n\nexport function get(\n  params: Object,\n  endpoint: EndpointDefinition,\n  callback: Function\n) {\n  let xhr = getHttpClient();\n\n  let url = this.getStandardOrigin() + endpoint.url;\n\n  return xdr.call(this, xhr, 'GET', url, params, {}, endpoint, callback);\n}\n\nexport function post(\n  params: Object,\n  body: string,\n  endpoint: EndpointDefinition,\n  callback: Function\n) {\n  let xhr = getHttpClient();\n\n  let url = this.getStandardOrigin() + endpoint.url;\n\n  return xdr.call(\n    this,\n    xhr,\n    'POST',\n    url,\n    params,\n    JSON.parse(body),\n    endpoint,\n    callback\n  );\n}\n\nexport function del(\n  params: Object,\n  endpoint: EndpointDefinition,\n  callback: Function\n) {\n  let xhr = getHttpClient();\n\n  let url = this.getStandardOrigin() + endpoint.url;\n\n  return xdr.call(this, xhr, 'DELETE', url, params, {}, endpoint, callback);\n}\n"],"file":"titanium.js"}