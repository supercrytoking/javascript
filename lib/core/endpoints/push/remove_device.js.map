{"version":3,"sources":["core/endpoints/push/remove_device.js"],"names":["getOperation","operationConstants","PNRemoveAllPushNotificationsOperation","validateParams","modules","incomingParams","device","pushGateway","config","subscribeKey","getURL","getRequestTimeout","getTransactionTimeout","isAuthSupported","prepareParams","type","handleResponse"],"mappings":";;;;;;;;;;;;;AAEA;;AACA;;;;AAEO,SAASA,YAAT,GAAgC;AACrC,SAAOC,uBAAmBC,qCAA1B;AACD;;AAEM,SAASC,cAAT,CAAwBC,OAAxB,EAAgDC,cAAhD,EAAkF;AAAA,MACjFC,MADiF,GACzDD,cADyD,CACjFC,MADiF;AAAA,MACzEC,WADyE,GACzDF,cADyD,CACzEE,WADyE;AAAA,MAEjFC,MAFiF,GAEtEJ,OAFsE,CAEjFI,MAFiF;AAIvF,MAAI,CAACF,MAAL,EAAa,OAAO,4BAAP;AACb,MAAI,CAACC,WAAL,EAAkB,OAAO,4CAAP;AAClB,MAAI,CAACC,MAAM,CAACC,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAASC,MAAT,CAAgBN,OAAhB,EAAwCC,cAAxC,EAAkF;AAAA,MACjFC,MADiF,GACtED,cADsE,CACjFC,MADiF;AAAA,MAEjFE,MAFiF,GAEtEJ,OAFsE,CAEjFI,MAFiF;AAGvF,oCAA2BA,MAAM,CAACC,YAAlC,sBAA0DH,MAA1D;AACD;;AAEM,SAASK,iBAAT,OAA8D;AAAA,MAAjCH,MAAiC,QAAjCA,MAAiC;AACnE,SAAOA,MAAM,CAACI,qBAAP,EAAP;AACD;;AAEM,SAASC,eAAT,GAAoC;AACzC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,CAAuBV,OAAvB,EAA+CC,cAA/C,EAAyF;AAAA,MACxFE,WADwF,GACxEF,cADwE,CACxFE,WADwF;AAE9F,SAAO;AAAEQ,IAAAA,IAAI,EAAER;AAAR,GAAP;AACD;;AAEM,SAASS,cAAT,GAAkC;AACvC,SAAO,EAAP;AACD","sourcesContent":["/* @flow */\n\nimport { RemoveDeviceArgs, ModulesInject } from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\n\nexport function getOperation(): string {\n  return operationConstants.PNRemoveAllPushNotificationsOperation;\n}\n\nexport function validateParams(modules: ModulesInject, incomingParams: RemoveDeviceArgs) {\n  let { device, pushGateway } = incomingParams;\n  let { config } = modules;\n\n  if (!device) return 'Missing Device ID (device)';\n  if (!pushGateway) return 'Missing GW Type (pushGateway: gcm or apns)';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules: ModulesInject, incomingParams: RemoveDeviceArgs): string {\n  let { device } = incomingParams;\n  let { config } = modules;\n  return `/v1/push/sub-key/${config.subscribeKey}/devices/${device}/remove`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject): number {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported(): boolean {\n  return true;\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: RemoveDeviceArgs): Object {\n  let { pushGateway } = incomingParams;\n  return { type: pushGateway };\n}\n\nexport function handleResponse(): Object {\n  return {};\n}\n"],"file":"remove_device.js"}