{"version":3,"sources":["core/endpoints/push/add_push_channels.js"],"names":[],"mappings":";;;;;QAIgB,Y,GAAA,Y;QAIA,c,GAAA,c;QAUA,M,GAAA,M;QAMA,a,GAAA,a;QAKA,c,GAAA,c;;AA3BhB;;AAEO,SAAS,YAAT,GAAgC;AACrC,SAAO,4CAAP;AACD;;AAEM,SAAS,cAAT,CAAwB,OAAxB,EAAiC,cAAjC,EAAmE;AAAA,MAClE,MADkE,GAChC,cADgC,CAClE,MADkE;AAAA,MAC1D,WAD0D,GAChC,cADgC,CAC1D,WAD0D;AAAA,MAC7C,QAD6C,GAChC,cADgC,CAC7C,QAD6C;AAAA,MAElE,MAFkE,GAEvD,OAFuD,CAElE,MAFkE;;;AAIxE,MAAI,CAAC,MAAL,EAAa,OAAO,4BAAP;AACb,MAAI,CAAC,WAAL,EAAkB,OAAO,4CAAP;AAClB,MAAI,CAAC,QAAD,IAAa,SAAS,MAAT,KAAoB,CAArC,EAAwC,OAAO,kBAAP;AACxC,MAAI,CAAC,OAAO,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAAS,MAAT,CAAgB,OAAhB,EAAyB,cAAzB,EAAmE;AAAA,MAClE,MADkE,GACvD,cADuD,CAClE,MADkE;AAAA,MAElE,MAFkE,GAEvD,OAFuD,CAElE,MAFkE;;AAGxE,SAAO,sBAAsB,OAAO,YAA7B,GAA4C,WAA5C,GAA0D,MAAjE;AACD;;AAEM,SAAS,aAAT,CAAuB,OAAvB,EAAgC,cAAhC,EAA0E;AAAA,MACzE,WADyE,GAC1C,cAD0C,CACzE,WADyE;AAAA,8BAC1C,cAD0C,CAC5D,QAD4D;AAAA,MAC5D,QAD4D,yCACjD,EADiD;;AAE/E,SAAO,EAAE,MAAM,WAAR,EAAqB,KAAK,mBAAmB,SAAS,IAAT,CAAc,GAAd,CAAnB,CAA1B,EAAP;AACD;;AAEM,SAAS,cAAT,GAAkC;AACvC,SAAO,EAAP;AACD","file":"core/endpoints/push/add_push_channels.js","sourcesContent":["/* @flow */\n\nimport { ModifyDeviceArgs } from '../../flow_interfaces';\n\nexport function getOperation(): string {\n  return 'PNPushNotificationEnabledChannelsOperation';\n}\n\nexport function validateParams(modules, incomingParams: ModifyDeviceArgs) {\n  let { device, pushGateway, channels } = incomingParams;\n  let { config } = modules;\n\n  if (!device) return 'Missing Device ID (device)';\n  if (!pushGateway) return 'Missing GW Type (pushGateway: gcm or apns)';\n  if (!channels || channels.length === 0) return 'Missing Channels';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules, incomingParams: ModifyDeviceArgs): string {\n  let { device } = incomingParams;\n  let { config } = modules;\n  return '/v1/push/sub-key/' + config.subscribeKey + '/devices/' + device;\n}\n\nexport function prepareParams(modules, incomingParams: ModifyDeviceArgs): Object {\n  let { pushGateway, channels = [] } = incomingParams;\n  return { type: pushGateway, add: encodeURIComponent(channels.join(',')) };\n}\n\nexport function handleResponse(): Object {\n  return {};\n}\n"],"sourceRoot":"/source/"}