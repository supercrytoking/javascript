{"version":3,"sources":["core/endpoints/objects/channel/set.js"],"names":["endpoint","getOperation","operationConstants","PNSetChannelMetadataOperation","validateParams","_","params","channel","data","usePatch","patchURL","config","subscribeKey","patchPayload","getRequestTimeout","getTransactionTimeout","isAuthSupported","getAuthToken","tokenManager","getToken","prepareParams","include","customFields","handleResponse","response","status"],"mappings":";;;;;;;AAGA;;;;AAgBA,IAAMA,QAA4E,GAAG;AACnFC,EAAAA,YAAY,EAAE;AAAA,WAAMC,uBAAmBC,6BAAzB;AAAA,GADqE;AAGnFC,EAAAA,cAAc,EAAE,wBAACC,CAAD,EAAIC,MAAJ,EAAe;AAC7B,QAAI,EAACA,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEC,OAAT,CAAJ,EAAsB;AACpB,aAAO,yBAAP;AACD;;AAED,QAAI,EAACD,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEE,IAAT,CAAJ,EAAmB;AACjB,aAAO,sBAAP;AACD;AACF,GAXkF;AAanFC,EAAAA,QAAQ,EAAE;AAAA,WAAM,IAAN;AAAA,GAbyE;AAenFC,EAAAA,QAAQ,EAAE,wBAAaJ,MAAb;AAAA,QAAGK,MAAH,QAAGA,MAAH;AAAA,iCAAuCA,MAAM,CAACC,YAA9C,uBAAuEN,MAAM,CAACC,OAA9E;AAAA,GAfyE;AAiBnFM,EAAAA,YAAY,EAAE,sBAACR,CAAD,EAAIC,MAAJ;AAAA,WAAeA,MAAM,CAACE,IAAtB;AAAA,GAjBqE;AAmBnFM,EAAAA,iBAAiB,EAAE;AAAA,QAAGH,MAAH,SAAGA,MAAH;AAAA,WAAgBA,MAAM,CAACI,qBAAP,EAAhB;AAAA,GAnBgE;AAqBnFC,EAAAA,eAAe,EAAE;AAAA,WAAM,IAAN;AAAA,GArBkE;AAuBnFC,EAAAA,YAAY,EAAE;AAAA,QAAGC,YAAH,SAAGA,YAAH;AAAA,WAAsBA,YAAY,CAACC,QAAb,CAAsB,SAAtB,CAAtB;AAAA,GAvBqE;AAyBnFC,EAAAA,aAAa,EAAE,uBAACf,CAAD,EAAIC,MAAJ;AAAA;;AAAA,WAAgB;AAC7Be,MAAAA,OAAO,EAAE,UAACf,MAAD,aAACA,MAAD,0CAACA,MAAM,CAAEe,OAAT,oDAAC,gBAAiBC,YAAlB,yCAAkC,IAAlC,KAA2C,CAAC,QAAD;AADvB,KAAhB;AAAA,GAzBoE;AA6BnFC,EAAAA,cAAc,EAAE,wBAAClB,CAAD,EAAImB,QAAJ;AAAA,WAAkB;AAChCC,MAAAA,MAAM,EAAED,QAAQ,CAACC,MADe;AAEhCjB,MAAAA,IAAI,EAAEgB,QAAQ,CAAChB;AAFiB,KAAlB;AAAA;AA7BmE,CAArF;eAmCeR,Q","sourcesContent":["/** @flow */\n\nimport type { EndpointConfig } from '../../endpoint';\nimport operationConstants from '../../../constants/operations';\nimport type { ChannelMetadata } from './channel';\n\nexport type SetChannelMetadataParams = {|\n  channel: string,\n  include?: {|\n    customFields: ?boolean,\n  |},\n  data: $Shape<ChannelMetadata>,\n|};\n\nexport type SetChannelMetadataResult = {|\n  status: 200,\n  data: ChannelMetadata,\n|};\n\nconst endpoint: EndpointConfig<SetChannelMetadataParams, SetChannelMetadataResult> = {\n  getOperation: () => operationConstants.PNSetChannelMetadataOperation,\n\n  validateParams: (_, params) => {\n    if (!params?.channel) {\n      return 'Channel cannot be empty';\n    }\n\n    if (!params?.data) {\n      return 'Data cannot be empty';\n    }\n  },\n\n  usePatch: () => true,\n\n  patchURL: ({ config }, params) => `/v2/objects/${config.subscribeKey}/channels/${params.channel}`,\n\n  patchPayload: (_, params) => params.data,\n\n  getRequestTimeout: ({ config }) => config.getTransactionTimeout(),\n\n  isAuthSupported: () => true,\n\n  getAuthToken: ({ tokenManager }) => tokenManager.getToken('channel'),\n\n  prepareParams: (_, params) => ({\n    include: (params?.include?.customFields ?? true) && ['custom'],\n  }),\n\n  handleResponse: (_, response) => ({\n    status: response.status,\n    data: response.data,\n  }),\n};\n\nexport default endpoint;\n"],"file":"set.js"}