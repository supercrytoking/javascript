{"version":3,"sources":["core/components/networking.js"],"names":["config","crypto","sendBeacon","_config","_crypto","_sendBeacon","_maxSubDomain","_currentSubDomain","Math","floor","random","_providedFQDN","secure","origin","_coreParams","shiftStandardOrigin","indexOf","newSubDomain","toString","replace","failover","_standardOrigin","nextOrigin","params","body","endpoint","callback","superagentConstruct","post","getStandardOrigin","url","query","send","_abstractedXDR","get","logVerbosity","use","_attachSuperagentLogger","proxy","timeout","end","err","resp","status","error","operation","statusCode","errorData","category","_detectErrorCategory","parsedResponse","JSON","parse","text","code","PNNetworkIssuesCategory","hasOwnProperty","PNTimeoutCategory","response","badRequest","PNBadRequestCategory","forbidden","PNAccessDeniedCategory","PNUnknownCategory","req","_pickLogger","console","log","window","start","Date","getTime","timestamp","toISOString","logger","qs","on","res","now","elapsed","timestampDone"],"mappings":"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","file":"networking.js","sourcesContent":["/* @flow */\n/* global window */\n\nimport superagent from 'superagent';\n\nimport Crypto from './cryptography/index';\nimport Config from './config';\nimport categoryConstants from '../constants/categories';\n\nimport { EndpointDefinition, StatusAnnouncement } from '../flow_interfaces';\n\ntype NetworkingModules = {\n  crypto: Crypto,\n  config: Config,\n  sendBeacon: Function\n}\n\nexport default class {\n  _sendBeacon: Function;\n\n  _config: Config;\n  _crypto: Crypto;\n\n  _maxSubDomain: number;\n  _currentSubDomain: number;\n\n  _standardOrigin: string;\n  _subscribeOrigin: string;\n\n  _providedFQDN: string;\n\n  _requestTimeout: number;\n\n  _coreParams: Object; /* items that must be passed with each request. */\n\n  constructor({ config, crypto, sendBeacon }: NetworkingModules) {\n    this._config = config;\n    this._crypto = crypto;\n    this._sendBeacon = sendBeacon;\n\n    this._maxSubDomain = 20;\n    this._currentSubDomain = Math.floor(Math.random() * this._maxSubDomain);\n\n    this._providedFQDN = (this._config.secure ? 'https://' : 'http://') + this._config.origin;\n    this._coreParams = {};\n\n    // create initial origins\n    this.shiftStandardOrigin();\n  }\n\n  nextOrigin(): string {\n    // if a custom origin is supplied, use do not bother with shuffling subdomains\n    if (this._providedFQDN.indexOf('pubsub.') === -1) {\n      return this._providedFQDN;\n    }\n\n    let newSubDomain: string;\n\n    this._currentSubDomain = this._currentSubDomain + 1;\n\n    if (this._currentSubDomain >= this._maxSubDomain) {\n      this._currentSubDomain = 1;\n    }\n\n    newSubDomain = this._currentSubDomain.toString();\n\n    return this._providedFQDN.replace('pubsub', `ps${newSubDomain}`);\n  }\n\n  // origin operations\n  shiftStandardOrigin(failover: boolean = false): string {\n    this._standardOrigin = this.nextOrigin(failover);\n\n    return this._standardOrigin;\n  }\n\n  getStandardOrigin(): string {\n    return this._standardOrigin;\n  }\n\n  POST(params : Object, body: string, endpoint: EndpointDefinition, callback: Function): superagent {\n    let superagentConstruct = superagent\n      .post(this.getStandardOrigin() + endpoint.url)\n      .query(params)\n      .send(body);\n    return this._abstractedXDR(superagentConstruct, endpoint, callback);\n  }\n\n  GET(params : Object, endpoint: EndpointDefinition, callback: Function): superagent {\n    let superagentConstruct = superagent\n      .get(this.getStandardOrigin() + endpoint.url)\n      .query(params);\n    return this._abstractedXDR(superagentConstruct, endpoint, callback);\n  }\n\n  _abstractedXDR(superagentConstruct: superagent, endpoint: EndpointDefinition, callback: Function): Object {\n    // attach a logger\n    if (this._config.logVerbosity) {\n      superagentConstruct = superagentConstruct.use(this._attachSuperagentLogger);\n    }\n\n    if (this._config.proxy) {\n      superagentConstruct = superagentConstruct.proxy(this._config.proxy);\n    }\n\n    return superagentConstruct\n      .timeout(endpoint.timeout)\n      .end((err, resp) => {\n        let status: StatusAnnouncement = {};\n        status.error = err !== null;\n        status.operation = endpoint.operation;\n\n        if (resp && resp.status) {\n          status.statusCode = resp.status;\n        }\n\n        if (err) {\n          status.errorData = err;\n          status.category = this._detectErrorCategory(err);\n          return callback(status, null);\n        }\n\n        let parsedResponse = JSON.parse(resp.text);\n        return callback(status, parsedResponse);\n      });\n  }\n\n  _detectErrorCategory(err: Object): string {\n    if (err.code === 'ENOTFOUND') return categoryConstants.PNNetworkIssuesCategory;\n    if (err.code === 'ECONNREFUSED') return categoryConstants.PNNetworkIssuesCategory;\n    if (err.code === 'ECONNRESET') return categoryConstants.PNNetworkIssuesCategory;\n    if (err.code === 'EAI_AGAIN') return categoryConstants.PNNetworkIssuesCategory;\n\n    if (err.status === 0 || (err.hasOwnProperty('status') && typeof err.status === 'undefined')) return categoryConstants.PNNetworkIssuesCategory;\n    if (err.timeout) return categoryConstants.PNTimeoutCategory;\n\n    if (err.response) {\n      if (err.response.badRequest) return categoryConstants.PNBadRequestCategory;\n      if (err.response.forbidden) return categoryConstants.PNAccessDeniedCategory;\n    }\n\n    return categoryConstants.PNUnknownCategory;\n  }\n\n  _attachSuperagentLogger(req: Object) {\n    let _pickLogger = () => {\n      if (console && console.log) return console; // eslint-disable-line no-console\n      if (window && window.console && window.console.log) return window.console;\n      return console;\n    };\n\n    let start = new Date().getTime();\n    let timestamp = new Date().toISOString();\n    let logger = _pickLogger();\n    logger.log('<<<<<');                                               // eslint-disable-line no-console\n    logger.log(`[${timestamp}]`, '\\n', req.url, '\\n', req.qs);    // eslint-disable-line no-console\n    logger.log('-----');                                               // eslint-disable-line no-console\n\n    req.on('response', (res) => {\n      let now = new Date().getTime();\n      let elapsed = now - start;\n      let timestampDone = new Date().toISOString();\n\n      logger.log('>>>>>>');                                                                                  // eslint-disable-line no-console\n      logger.log(`[${timestampDone} / ${elapsed}]`, '\\n', req.url, '\\n', req.qs, '\\n', res.text);  // eslint-disable-line no-console\n      logger.log('-----');                                                                                   // eslint-disable-line no-console\n    });\n  }\n}\n"]}