{"version":3,"sources":["core/components/token_manager.js"],"names":["config","cbor","_config","_cbor","_initializeTokens","_userTokens","_spaceTokens","_userToken","undefined","_spaceToken","token","tokenObject","parseToken","resources","users","Object","keys","forEach","id","spaces","patterns","length","_setToken","tokens","setToken","tokenDef","result","user","space","type","permissions","permissionsResult","create","read","write","manage","tokenString","parsed","decodeToken","userResourcePermissions","res","usr","spaceResourcePermissions","spc","channelResourcePermissions","chan","groupResourcePermissions","grp","userPatternPermissions","pat","spacePatternPermissions","channelPatternPermissions","groupPatternPermissions","version","v","timestamp","t","ttl","userResources","spaceResources","channelResources","groupResources","extractPermissions","channels","groups","userPatterns","spacePatterns","channelPatterns","groupPatterns","meta","signature","sig"],"mappings":"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","sourcesContent":["/* @flow */\nimport Config from './config';\nimport {\n  TokensDefinition,\n  GetTokensInput,\n  GrantTokenOutput,\n} from '../flow_interfaces';\n\nexport default class {\n  _config: Config;\n\n  _cbor: any;\n\n  _userTokens: { [string]: string};\n  _spaceTokens: { [string]: string};\n\n  _userToken: ?string;\n  _spaceToken: ?string;\n\n  constructor(config: Config, cbor: any) {\n    this._config = config;\n    this._cbor = cbor;\n    this._initializeTokens();\n  }\n\n  _initializeTokens() {\n    this._userTokens = {};\n    this._spaceTokens = {};\n\n    this._userToken = undefined;\n    this._spaceToken = undefined;\n  }\n\n  _setToken(token: string) {\n    let tokenObject: GrantTokenOutput = this.parseToken(token);\n\n    if (tokenObject && tokenObject.resources) {\n      if (tokenObject.resources.users) {\n        Object.keys(tokenObject.resources.users).forEach((id) => {\n          this._userTokens[id] = token;\n        });\n      }\n\n      if (tokenObject.resources.spaces) {\n        Object.keys(tokenObject.resources.spaces).forEach((id) => {\n          this._spaceTokens[id] = token;\n        });\n      }\n    }\n\n    if (tokenObject && tokenObject.patterns) {\n      if (tokenObject.patterns.users && Object.keys(tokenObject.patterns.users).length > 0) {\n        this._userToken = token;\n      }\n\n      if (tokenObject.patterns.spaces && Object.keys(tokenObject.patterns.spaces).length > 0) {\n        this._spaceToken = token;\n      }\n    }\n  }\n\n  setToken(token: string) {\n    if (token && token.length > 0) {\n      this._setToken(token);\n    }\n  }\n\n  setTokens(tokens: string[]) {\n    if (tokens && tokens.length && typeof tokens === 'object') {\n      tokens.forEach((token) => {\n        this.setToken(token);\n      });\n    }\n  }\n\n  getTokens(tokenDef: GetTokensInput): TokensDefinition {\n    let result: TokensDefinition = {\n      users: {},\n      spaces: {}\n    };\n\n    if (tokenDef) {\n      if (tokenDef.user) {\n        result.user = this._userToken;\n      }\n\n      if (tokenDef.space) {\n        result.space = this._spaceToken;\n      }\n\n      if (tokenDef.users) {\n        tokenDef.users.forEach((user) => {\n          result.users[user] = this._userTokens[user];\n        });\n      }\n\n      if (tokenDef.space) {\n        tokenDef.spaces.forEach((space) => {\n          result.spaces[space] = this._spaceTokens[space];\n        });\n      }\n    } else {\n      if (this._userToken) {\n        result.user = this._userToken;\n      }\n\n      if (this._spaceToken) {\n        result.space = this._spaceToken;\n      }\n\n      Object.keys(this._userTokens).forEach((user) => {\n        result.users[user] = this._userTokens[user];\n      });\n\n      Object.keys(this._spaceTokens).forEach((space) => {\n        result.spaces[space] = this._spaceTokens[space];\n      });\n    }\n\n    return result;\n  }\n\n  getToken(type: string, id?: string) {\n    let result;\n\n    if (id) {\n      if (type === 'user') {\n        result = this._userTokens[id];\n      } else if (type === 'space') {\n        result = this._spaceTokens[id];\n      }\n    } else if (type === 'user') {\n      result = this._userToken;\n    } else if (type === 'space') {\n      result = this._spaceToken;\n    }\n\n    return result;\n  }\n\n  extractPermissions(permissions: number) {\n    let permissionsResult = {\n      create: false,\n      read: false,\n      write: false,\n      manage: false,\n      delete: false,\n    };\n\n    /* eslint-disable */\n\n    if ((permissions & 16) === 16) {\n      permissionsResult.create = true;\n    }\n\n    if ((permissions & 8) === 8) {\n      permissionsResult.delete = true;\n    }\n\n    if ((permissions & 4) === 4) {\n      permissionsResult.manage = true;\n    }\n    \n    if ((permissions & 2) === 2) {\n      permissionsResult.write = true;\n    }\n    \n    if ((permissions & 1) === 1) {\n      permissionsResult.read = true;\n    }\n    \n    /* eslint-enable */\n\n    return permissionsResult;\n  }\n\n  parseToken(tokenString: string): GrantTokenOutput {\n    let parsed = this._cbor.decodeToken(tokenString);\n\n    if (parsed !== undefined) {\n      let userResourcePermissions = Object.keys(parsed.res.usr);\n      let spaceResourcePermissions = Object.keys(parsed.res.spc);\n      let channelResourcePermissions = Object.keys(parsed.res.chan);\n      let groupResourcePermissions = Object.keys(parsed.res.grp);\n      let userPatternPermissions = Object.keys(parsed.pat.usr);\n      let spacePatternPermissions = Object.keys(parsed.pat.spc);\n      let channelPatternPermissions = Object.keys(parsed.pat.chan);\n      let groupPatternPermissions = Object.keys(parsed.pat.grp);\n\n      let result: GrantTokenOutput  = {\n        version: parsed.v,\n        timestamp: parsed.t,\n        ttl: parsed.ttl\n      };\n\n      let userResources = userResourcePermissions.length > 0;\n      let spaceResources = spaceResourcePermissions.length > 0;\n      let channelResources = channelResourcePermissions.length > 0;\n      let groupResources = groupResourcePermissions.length > 0;\n\n      if (userResources  || spaceResources || channelResources || groupResources) {\n        result.resources = {};\n\n        if (userResources) {\n          result.resources.users = {};\n          userResourcePermissions.forEach((id) => {\n            result.resources.users[id] = this.extractPermissions(parsed.res.usr[id]);\n          });\n        }\n\n        if (spaceResources) {\n          result.resources.spaces = {};\n          spaceResourcePermissions.forEach((id) => {\n            result.resources.spaces[id] = this.extractPermissions(parsed.res.spc[id]);\n          });\n        }\n\n        if (channelResources) {\n          result.resources.channels = {};\n          channelResourcePermissions.forEach((id) => {\n            result.resources.channels[id] = this.extractPermissions(parsed.res.chan[id]);\n          });\n        }\n\n        if (groupResources) {\n          result.resources.groups = {};\n          groupResourcePermissions.forEach((id) => {\n            result.resources.groups[id] = this.extractPermissions(parsed.res.grp[id]);\n          });\n        }\n      }\n\n      let userPatterns = userPatternPermissions.length > 0;\n      let spacePatterns = spacePatternPermissions.length > 0;\n      let channelPatterns = channelPatternPermissions.length > 0;\n      let groupPatterns = groupPatternPermissions.length > 0;\n\n      if (userPatterns  || spacePatterns || channelPatterns || groupPatterns) {\n        result.patterns = {};\n\n        if (userPatterns) {\n          result.patterns.users = {};\n          userPatternPermissions.forEach((id) => {\n            result.patterns.users[id] = this.extractPermissions(parsed.pat.usr[id]);\n          });\n        }\n\n        if (spacePatterns) {\n          result.patterns.spaces = {};\n          spacePatternPermissions.forEach((id) => {\n            result.patterns.spaces[id] = this.extractPermissions(parsed.pat.spc[id]);\n          });\n        }\n\n        if (channelPatterns) {\n          result.patterns.channels = {};\n          channelPatternPermissions.forEach((id) => {\n            result.patterns.channels[id] = this.extractPermissions(parsed.pat.chan[id]);\n          });\n        }\n\n        if (groupPatterns) {\n          result.patterns.groups = {};\n          groupPatternPermissions.forEach((id) => {\n            result.patterns.groups[id] = this.extractPermissions(parsed.pat.grp[id]);\n          });\n        }\n      }\n\n      if (Object.keys(parsed.meta).length > 0) {\n        result.meta = parsed.meta;\n      }\n\n      result.signature = parsed.sig;\n\n      return result;\n    } else {\n      return undefined;\n    }\n  }\n\n  clearTokens() {\n    this._initializeTokens();\n  }\n}\n"],"file":"token_manager.js"}