{"version":3,"sources":["core/endpoints/objects/membership/set.js"],"names":["endpoint","getOperation","operationConstants","PNSetMembershipsOperation","validateParams","_","params","channels","length","usePatch","patchURL","config","subscribeKey","utils","encodeString","uuid","getUUID","patchPayload","set","remove","type","map","channel","id","custom","getRequestTimeout","getTransactionTimeout","isAuthSupported","getAuthToken","tokenManager","getToken","prepareParams","_modules","queryParams","include","customFields","push","customChannelFields","channelFields","join","totalCount","count","page","next","start","prev","end","filter","limit","sort","Object","entries","key","value","handleResponse","response","status","data"],"mappings":"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","sourcesContent":["/** @flow */\n\nimport type { EndpointConfig } from '../../endpoint';\nimport operationConstants from '../../../constants/operations';\nimport type { Membership, PaginatedResultParams } from './membership';\nimport utils from '../../../utils';\n\ntype CommonParams = {|\n  uuid?: string,\n|};\n\nexport type RemoveMembershipsParams = {|\n  type: 'delete',\n  channels: (string | { id: string, custom?: empty })[],\n|} & CommonParams &\n  PaginatedResultParams;\n\nexport type UpsertMembershipsParams = {|\n  type: 'set',\n  channels: (string | { id: string, custom?: any })[],\n|} & CommonParams &\n  PaginatedResultParams;\n\nexport type SetMembershipsParams = RemoveMembershipsParams | UpsertMembershipsParams;\n\nexport type SetMembershipsResult = {|\n  status: 200,\n  data: Membership,\n  totalCount?: number,\n  prev?: string,\n  next?: string,\n|};\n\nconst endpoint: EndpointConfig<SetMembershipsParams, SetMembershipsResult> = {\n  getOperation: () => operationConstants.PNSetMembershipsOperation,\n\n  validateParams: (_, params) => {\n    if (!params?.channels || params?.channels.length === 0) {\n      return 'Channels cannot be empty';\n    }\n  },\n\n  usePatch: () => true,\n\n  patchURL: ({ config }, params) =>\n    `/v2/objects/${config.subscribeKey}/uuids/${utils.encodeString(params.uuid ?? config.getUUID())}/channels`,\n\n  patchPayload: (_, params) => ({\n    set: [],\n    remove: [],\n    [params.type]: params.channels.map((channel) => {\n      if (typeof channel === 'string') {\n        return {\n          channel: {\n            id: channel,\n          },\n        };\n      } else {\n        return {\n          channel: { id: channel.id },\n          custom: channel.custom,\n        };\n      }\n    }),\n  }),\n\n  getRequestTimeout: ({ config }) => config.getTransactionTimeout(),\n\n  isAuthSupported: () => true,\n\n  getAuthToken: ({ tokenManager }) => tokenManager.getToken('membership'),\n\n  prepareParams: (_modules, params) => {\n    const queryParams = {};\n\n    if (params?.include) {\n      queryParams.include = [];\n\n      if (params.include?.customFields) {\n        queryParams.include.push('custom');\n      }\n\n      if (params.include?.customChannelFields) {\n        queryParams.include.push('channel.custom');\n      }\n\n      if (params.include?.channelFields) {\n        queryParams.include.push('channel');\n      }\n\n      queryParams.include = queryParams.include.join(',');\n    }\n\n    if (params?.include?.totalCount) {\n      queryParams.count = true;\n    }\n\n    if (params?.page?.next) {\n      queryParams.start = params.page?.next;\n    }\n\n    if (params?.page?.prev) {\n      queryParams.end = params.page?.prev;\n    }\n\n    if (params?.filter) {\n      queryParams.filter = params.filter;\n    }\n\n    if (params?.limit) {\n      queryParams.limit = params.limit;\n    }\n\n    if (params?.sort) {\n      queryParams.sort = Object.entries(params.sort ?? {}).map(([key, value]) => {\n        if (value === 'asc' || value === 'desc') {\n          return `${key}:${value}`;\n        } else {\n          return key;\n        }\n      });\n    }\n\n    return queryParams;\n  },\n\n  handleResponse: (_, response) => ({\n    status: response.status,\n    data: response.data,\n    totalCount: response.totalCount,\n    prev: response.prev,\n    next: response.next,\n  }),\n};\n\nexport default endpoint;\n"],"file":"set.js"}