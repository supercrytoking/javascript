{"version":3,"sources":["core/endpoints/history.js"],"names":[],"mappings":"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","file":"core/endpoints/history.js","sourcesContent":["/* @flow */\n\nimport Networking from '../components/networking';\nimport Config from '../components/config';\nimport Crypto from '../components/cryptography/index';\nimport BaseEndpoint from './base.js';\nimport { endpointDefinition, statusStruct } from '../flow_interfaces';\n\ntype historyConstruct = {\n  networking: Networking,\n  crypto: Crypto,\n  config: Config\n};\n\ntype fetchHistoryArguments = {\n  channel: string, // fetch history from a channel\n  channelGroup: string, // fetch history from channel groups\n  start: number, // start timetoken for history fetching\n  end: number, // end timetoken for history feting\n  includeTimetoken: boolean, // include time token for each history call\n  reverse: boolean,\n  count: number\n}\n\ntype historyItem = {\n  timetoken: number | null,\n  entry: any,\n}\n\ntype historyResponse = {\n  messages: Array<historyItem>,\n  startTimeToken: number,\n  endTimeToken: number,\n}\n\nexport default class extends BaseEndpoint {\n  networking: Networking;\n  crypto: Crypto;\n  config: Config;\n\n  constructor({ networking, crypto, config }: historyConstruct) {\n    super({ config });\n    this.networking = networking;\n    this.crypto = crypto;\n    this.config = config;\n  }\n\n  fetch(args: fetchHistoryArguments, callback: Function) {\n    const { channel, start, end, includeTimetoken, reverse, count = 100 } = args;\n\n    const endpointConfig: endpointDefinition = {\n      params: {\n        authKey: { required: false },\n        uuid: { required: false },\n        subscribeKey: { required: true }\n      },\n      url: '/v2/history/sub-key/' + this.config.subscribeKey + '/channel/' + encodeURIComponent(channel)\n    };\n\n    if (!channel) return callback(this.createValidationError('Missing channel'));\n    if (!callback) return this.log('Missing Callback');\n\n    // validate this request and return false if stuff is missing\n    if (!this.validateEndpointConfig(endpointConfig)) { return; }\n    // create base params\n    const params = this.createBaseParams(endpointConfig);\n    params.count = count;\n\n    if (start) params.start = start;\n    if (end) params.end = end;\n    if (includeTimetoken != null) params.include_token = includeTimetoken.toString();\n    if (reverse != null) params.reverse = reverse.toString();\n\n    // Send Message\n    this.networking.GET(params, endpointConfig, (status: statusStruct, payload: Object) => {\n      if (status.error) return callback(status);\n\n      callback(status, this._parseResponse(payload, includeTimetoken));\n    });\n  }\n\n  _parseResponse(payload: Object, includeTimetoken: boolean): historyResponse {\n    const response: historyResponse = {\n      messages: [],\n      startTimeToken: parseInt(payload[1], 10),\n      endTimeToken: parseInt(payload[2], 10),\n    };\n\n    payload[0].forEach((serverHistoryItem) => {\n      const item: historyItem = {\n        timetoken: null,\n        entry: null\n      };\n\n      if (includeTimetoken) {\n        item.timetoken = serverHistoryItem.timetoken;\n        item.entry = this.__processMessage(serverHistoryItem.message);\n      } else {\n        item.entry = this.__processMessage(serverHistoryItem);\n      }\n\n      response.messages.push(item);\n    });\n\n    return response;\n  }\n\n  __processMessage(message: String) {\n    if (!this.config.cipherKey) return message;\n\n    try {\n      return this.crypto.decrypt(message);\n    } catch (e) {\n      return message;\n    }\n  }\n\n}\n"],"sourceRoot":"/source/"}