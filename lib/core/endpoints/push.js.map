{"version":3,"sources":["core/endpoints/push.js"],"names":[],"mappings":"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","file":"core/endpoints/push.js","sourcesContent":["/* @flow */\n\nimport Networking from '../components/networking';\nimport Config from '../components/config';\nimport BaseEndpoint from './base.js';\nimport { EndpointDefinition, StatusStruct } from '../flow_interfaces';\n\ntype PushConstruct = {\n  networking: Networking,\n  config: Config\n};\n\ntype ProvisionDeviceArgs = {\n  operation: 'add' | 'remove',\n  pushGateway: 'gcm' | 'apns' | 'mpns',\n  device: string,\n  channels: Array<string>\n};\n\ntype ModifyDeviceArgs = {\n  pushGateway: 'gcm' | 'apns' | 'mpns',\n  device: string,\n  channels: Array<string>\n};\n\ntype ListChannelsArgs = {\n  pushGateway: 'gcm' | 'apns' | 'mpns',\n  device: string,\n};\n\ntype RemoveDeviceAargs = {\n  pushGateway: 'gcm' | 'apns' | 'mpns',\n  device: string,\n};\n\ntype ListChannelsResponse = {\n  channels: Array<string>\n}\n\nexport default class extends BaseEndpoint {\n  networking: Networking;\n  config: Config;\n\n  constructor({ networking, config }: PushConstruct) {\n    super({ config });\n    this.networking = networking;\n    this.config = config;\n  }\n\n  listChannelsForDevice(args: ListChannelsArgs, callback: Function) {\n    let { pushGateway, device } = args;\n    const endpointConfig: EndpointDefinition = {\n      params: {\n        authKey: { required: false },\n        uuid: { required: false }\n      },\n      url: '/v1/push/sub-key/' + this.config.subscribeKey + '/devices/' + device\n    };\n\n    if (!device) {\n      return callback(this.createValidationError('Missing Device ID (device)'));\n    }\n\n    if (!pushGateway) {\n      return callback(this.createValidationError('Missing GW Type (pushGateway: gcm,apns, mpns)'));\n    }\n\n    // validate this request and return false if stuff is missing\n    if (!this.validateEndpointConfig(endpointConfig)) { return; }\n    // create base params\n    const params = this.createBaseParams(endpointConfig);\n    params.type = pushGateway;\n\n    this.networking.GET(params, endpointConfig, (status: StatusStruct, payload: Array<string>) => {\n      if (status.error) return callback(status);\n\n      let response: ListChannelsResponse = {\n        channels: payload\n      };\n\n      callback(status, response);\n    });\n  }\n\n  removeDevice(args: RemoveDeviceAargs, callback: Function) {\n    let { pushGateway, device } = args;\n    const endpointConfig: EndpointDefinition = {\n      params: {\n        authKey: { required: false },\n        uuid: { required: false }\n      },\n      url: '/v1/push/sub-key/' + this.config.subscribeKey + '/devices/' + device + '/remove'\n    };\n\n    if (!device) {\n      return callback(this.createValidationError('Missing Device ID (device)'));\n    }\n\n    if (!pushGateway) {\n      return callback(this.createValidationError('Missing GW Type (pushGateway: gcm or apns)'));\n    }\n\n    // validate this request and return false if stuff is missing\n    if (!this.validateEndpointConfig(endpointConfig)) { return; }\n    // create base params\n    const params = this.createBaseParams(endpointConfig);\n    params.type = pushGateway;\n\n    this.networking.GET(params, endpointConfig, (status: StatusStruct) => {\n      callback(status);\n    });\n  }\n\n  addDeviceToPushChannels(args: ModifyDeviceArgs, callback: Function) {\n    let { pushGateway, device, channels } = args;\n    const payload = { operation: 'add', pushGateway, device, channels };\n    this.__provisionDevice(payload, callback);\n  }\n\n  removeDeviceFromPushChannels(args: ModifyDeviceArgs, callback: Function) {\n    let { pushGateway, device, channels } = args;\n    const payload = { operation: 'remove', pushGateway, device, channels };\n    this.__provisionDevice(payload, callback);\n  }\n\n  __provisionDevice(args: ProvisionDeviceArgs, callback: Function) {\n    let { operation, pushGateway, device, channels } = args;\n    const endpointConfig: EndpointDefinition = {\n      params: {\n        authKey: { required: false },\n        uuid: { required: false }\n      },\n      url: '/v1/push/sub-key/' + this.config.subscribeKey + '/devices/' + device\n    };\n\n    if (!device) {\n      return callback(this.createValidationError('Missing Device ID (device)'));\n    }\n\n    if (!pushGateway) {\n      return callback(this.createValidationError('Missing GW Type (pushGateway: gcm or apns)'));\n    }\n\n    if (!operation) {\n      return callback(this.createValidationError('Missing GW Operation (operation: add or remove)'));\n    }\n\n    if (!channels) {\n      return callback(this.createValidationError('Missing gw destination Channel (channel)'));\n    }\n\n    // validate this request and return false if stuff is missing\n    if (!this.validateEndpointConfig(endpointConfig)) { return; }\n    // create base params\n    const params = this.createBaseParams(endpointConfig);\n    params.type = pushGateway;\n\n    if (operation === 'add') params.add = encodeURIComponent(channels.join(','));\n    if (operation === 'remove') params.remove = encodeURIComponent(channels.join(','));\n\n\n    this.networking.GET(params, endpointConfig, (status: StatusStruct) => {\n      callback(status);\n    });\n  }\n\n}\n"],"sourceRoot":"/source/"}