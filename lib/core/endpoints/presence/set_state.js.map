{"version":3,"sources":["core/endpoints/presence/set_state.js"],"names":["getOperation","validateParams","getURL","getRequestTimeout","isAuthSupported","prepareParams","handleResponse","PNSetStateOperation","modules","incomingParams","config","state","subscribeKey","channels","stringifiedChannels","length","join","encodeString","UUID","getTransactionTimeout","channelGroups","params","JSON","stringify","serverResponse","payload"],"mappings":";;;;;QAMgBA,Y,GAAAA,Y;QAIAC,c,GAAAA,c;QAQAC,M,GAAAA,M;QAOAC,iB,GAAAA,iB;QAIAC,e,GAAAA,e;QAIAC,a,GAAAA,a;QAaAC,c,GAAAA,c;;AA5ChB;;AACA;;;;AACA;;;;;;AAEO,SAASN,YAAT,GAAgC;AACrC,SAAO,qBAAmBO,mBAA1B;AACD;;AAEM,SAASN,cAAT,CAAwBO,OAAxB,EAAgDC,cAAhD,EAAmF;AAAA,MAClFC,MADkF,GACvEF,OADuE,CAClFE,MADkF;AAAA,MAElFC,KAFkF,GAExEF,cAFwE,CAElFE,KAFkF;;;AAIxF,MAAI,CAACA,KAAL,EAAY,OAAO,eAAP;AACZ,MAAI,CAACD,OAAOE,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAASV,MAAT,CAAgBM,OAAhB,EAAwCC,cAAxC,EAAmF;AAAA,MAClFC,MADkF,GACvEF,OADuE,CAClFE,MADkF;AAAA,8BAEhED,cAFgE,CAElFI,QAFkF;AAAA,MAElFA,QAFkF,yCAEvE,EAFuE;;AAGxF,MAAIC,sBAAsBD,SAASE,MAAT,GAAkB,CAAlB,GAAsBF,SAASG,IAAT,CAAc,GAAd,CAAtB,GAA2C,GAArE;AACA,SAAO,0BAA0BN,OAAOE,YAAjC,GAAgD,WAAhD,GAA8D,gBAAMK,YAAN,CAAmBH,mBAAnB,CAA9D,GAAwG,QAAxG,GAAmHJ,OAAOQ,IAA1H,GAAiI,OAAxI;AACD;;AAEM,SAASf,iBAAT,OAA8D;AAAA,MAAjCO,MAAiC,QAAjCA,MAAiC;;AACnE,SAAOA,OAAOS,qBAAP,EAAP;AACD;;AAEM,SAASf,eAAT,GAAoC;AACzC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,CAAuBG,OAAvB,EAA+CC,cAA/C,EAA0F;AAAA,MACzFE,KADyF,GAC3DF,cAD2D,CACzFE,KADyF;AAAA,+BAC3DF,cAD2D,CAClFW,aADkF;AAAA,MAClFA,aADkF,0CAClE,EADkE;;AAE/F,MAAMC,SAAS,EAAf;;AAEAA,SAAOV,KAAP,GAAeW,KAAKC,SAAL,CAAeZ,KAAf,CAAf;;AAEA,MAAIS,cAAcL,MAAd,GAAuB,CAA3B,EAA8B;AAC5BM,WAAO,eAAP,IAA0BD,cAAcJ,IAAd,CAAmB,GAAnB,CAA1B;AACD;;AAED,SAAOK,MAAP;AACD;;AAEM,SAASf,cAAT,CAAwBE,OAAxB,EAAgDgB,cAAhD,EAA0F;AAC/F,SAAO,EAAEb,OAAOa,eAAeC,OAAxB,EAAP;AACD","file":"set_state.js","sourcesContent":["/* @flow */\n\nimport { SetStateArguments, SetStateResponse, ModulesInject } from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\nimport utils from '../../utils';\n\nexport function getOperation(): string {\n  return operationConstants.PNSetStateOperation;\n}\n\nexport function validateParams(modules: ModulesInject, incomingParams: SetStateArguments) {\n  let { config } = modules;\n  let { state } = incomingParams;\n\n  if (!state) return 'Missing State';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules: ModulesInject, incomingParams: SetStateArguments): string {\n  let { config } = modules;\n  let { channels = [] } = incomingParams;\n  let stringifiedChannels = channels.length > 0 ? channels.join(',') : ',';\n  return '/v2/presence/sub-key/' + config.subscribeKey + '/channel/' + utils.encodeString(stringifiedChannels) + '/uuid/' + config.UUID + '/data';\n}\n\nexport function getRequestTimeout({ config }: ModulesInject): number {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported(): boolean {\n  return true;\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: SetStateArguments): Object {\n  let { state, channelGroups = [] } = incomingParams;\n  const params = {};\n\n  params.state = JSON.stringify(state);\n\n  if (channelGroups.length > 0) {\n    params['channel-group'] = channelGroups.join(',');\n  }\n\n  return params;\n}\n\nexport function handleResponse(modules: ModulesInject, serverResponse: Object): SetStateResponse {\n  return { state: serverResponse.payload };\n}\n"]}