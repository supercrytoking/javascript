{"version":3,"sources":["core/endpoints/file_upload/list_files.js"],"names":["endpoint","getOperation","operationConstants","PNListFilesOperation","validateParams","_","params","channel","getURL","config","subscribeKey","getRequestTimeout","getTransactionTimeout","isAuthSupported","getAuthToken","tokenManager","getToken","prepareParams","handleResponse","response","status","data"],"mappings":";;;;;;;;;AAGA;;AAGA,IAAMA,QAA0D,GAAG;AACjEC,EAAAA,YAAY,EAAE;AAAA,WAAMC,uBAAmBC,oBAAzB;AAAA,GADmD;AAGjEC,EAAAA,cAAc,EAAE,wBAACC,CAAD,EAAIC,MAAJ,EAAe;AAC7B,QAAI,EAACA,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEC,OAAT,CAAJ,EAAsB;AACpB,aAAO,yBAAP;AACD;AACF,GAPgE;AASjEC,EAAAA,MAAM,EAAE,sBAAaF,MAAb;AAAA,QAAGG,MAAH,QAAGA,MAAH;AAAA,+BAAqCA,MAAM,CAACC,YAA5C,uBAAqEJ,MAAM,CAACC,OAA5E;AAAA,GATyD;AAWjEI,EAAAA,iBAAiB,EAAE;AAAA,QAAGF,MAAH,SAAGA,MAAH;AAAA,WAAgBA,MAAM,CAACG,qBAAP,EAAhB;AAAA,GAX8C;AAajEC,EAAAA,eAAe,EAAE;AAAA,WAAM,IAAN;AAAA,GAbgD;AAejEC,EAAAA,YAAY,EAAE;AAAA,QAAGC,YAAH,SAAGA,YAAH;AAAA,WAAsBA,YAAY,CAACC,QAAb,CAAsB,YAAtB,CAAtB;AAAA,GAfmD;AAiBjEC,EAAAA,aAAa,EAAE;AAAA,WAAO,EAAP;AAAA,GAjBkD;AAmBjEC,EAAAA,cAAc,EAAE,wBAACb,CAAD,EAAIc,QAAJ;AAAA,WAAmC;AACjDC,MAAAA,MAAM,EAAED,QAAQ,CAACC,MADgC;AAEjDC,MAAAA,IAAI,EAAEF,QAAQ,CAACE;AAFkC,KAAnC;AAAA;AAnBiD,CAAnE;eAyBerB,Q","sourcesContent":["/** @flow */\n\nimport type { EndpointConfig } from '../endpoint';\nimport operationConstants from '../../constants/operations';\nimport type { ListFilesParams, ListFilesResult } from './types';\n\nconst endpoint: EndpointConfig<ListFilesParams, ListFilesResult> = {\n  getOperation: () => operationConstants.PNListFilesOperation,\n\n  validateParams: (_, params) => {\n    if (!params?.channel) {\n      return 'channel can\\'t be empty';\n    }\n  },\n\n  getURL: ({ config }, params) => `/v1/files/${config.subscribeKey}/channels/${params.channel}/files`,\n\n  getRequestTimeout: ({ config }) => config.getTransactionTimeout(),\n\n  isAuthSupported: () => true,\n\n  getAuthToken: ({ tokenManager }) => tokenManager.getToken('fileUpload'),\n\n  prepareParams: () => ({}),\n\n  handleResponse: (_, response): ListFilesResult => ({\n    status: response.status,\n    data: response.data,\n  }),\n};\n\nexport default endpoint;\n"],"file":"list_files.js"}