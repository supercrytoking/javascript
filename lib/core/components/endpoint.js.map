{"version":3,"sources":["core/components/endpoint.js"],"names":["PubNubError","message","status","name","constructor","Error","createError","errorPayload","type","error","createValidationError","decideURL","endpoint","modules","incomingParams","usePost","postURL","getURL","generatePNSDK","config","sdkName","base","sdkFamily","partnerId","getVersion","signRequest","url","outgoingParams","crypto","timestamp","Math","floor","Date","getTime","signInput","subscribeKey","publishKey","utils","signPamFromParams","signature","HMACSHA256","replace","networking","callback","promiseComponent","getOperation","operationConstants","PNTimeOperation","PNChannelGroupsOperation","Promise","createPromise","validationResult","validateParams","reject","promise","prepareParams","callInstance","networkingParams","operation","timeout","getRequestTimeout","uuid","UUID","pnsdk","useInstanceId","instanceid","instanceId","useRequestId","requestid","uuidGenerator","createUUID","isAuthSupported","getAuthKey","auth","secretKey","onResponse","payload","parsedPayload","handleResponse","fulfill","postPayload","POST","useDelete","DELETE","GET","PNSubscribeOperation"],"mappings":"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","sourcesContent":["import uuidGenerator from './uuid';\nimport { StatusAnnouncement } from '../flow_interfaces';\nimport utils from '../utils';\nimport Config from './config';\nimport operationConstants from '../constants/operations';\n\nclass PubNubError extends Error {\n  constructor(message, status) {\n    super(message);\n    this.name = this.constructor.name;\n    this.status = status;\n    this.message = message;\n  }\n}\n\nfunction createError(errorPayload: Object, type: string): Object {\n  errorPayload.type = type;\n  errorPayload.error = true;\n  return errorPayload;\n}\n\nfunction createValidationError(message: string): Object {\n  return createError({ message }, 'validationError');\n}\n\nfunction decideURL(endpoint, modules, incomingParams) {\n  if (endpoint.usePost && endpoint.usePost(modules, incomingParams)) {\n    return endpoint.postURL(modules, incomingParams);\n  } else {\n    return endpoint.getURL(modules, incomingParams);\n  }\n}\n\nfunction generatePNSDK(config: Config): string {\n  if (config.sdkName) {\n    return config.sdkName;\n  }\n\n  let base = `PubNub-JS-${config.sdkFamily}`;\n\n  if (config.partnerId) {\n    base += `-${config.partnerId}`;\n  }\n\n  base += `/${config.getVersion()}`;\n\n  return base;\n}\n\nfunction signRequest(modules, url, outgoingParams) {\n  let { config, crypto } = modules;\n\n  outgoingParams.timestamp = Math.floor(new Date().getTime() / 1000);\n  let signInput = `${config.subscribeKey}\\n${config.publishKey}\\n${url}\\n`;\n  signInput += utils.signPamFromParams(outgoingParams);\n\n  let signature = crypto.HMACSHA256(signInput);\n  signature = signature.replace(/\\+/g, '-');\n  signature = signature.replace(/\\//g, '_');\n\n  outgoingParams.signature = signature;\n}\n\nexport default function(modules, endpoint, ...args) {\n  let { networking, config } = modules;\n  let callback = null;\n  let promiseComponent = null;\n  let incomingParams = {};\n\n  if (endpoint.getOperation() === operationConstants.PNTimeOperation || endpoint.getOperation() === operationConstants.PNChannelGroupsOperation) {\n    callback = args[0];\n  } else {\n    incomingParams = args[0];\n    callback = args[1];\n  }\n\n  // bridge in Promise support.\n  if (typeof Promise !== 'undefined' && !callback) {\n    promiseComponent = utils.createPromise();\n  }\n\n  let validationResult = endpoint.validateParams(modules, incomingParams);\n\n  if (validationResult) {\n    if (callback) {\n      return callback(createValidationError(validationResult));\n    } else if (promiseComponent) {\n      promiseComponent.reject(new PubNubError('Validation failed, check status for details', createValidationError(validationResult)));\n      return promiseComponent.promise;\n    }\n    return;\n  }\n\n  let outgoingParams = endpoint.prepareParams(modules, incomingParams);\n  let url = decideURL(endpoint, modules, incomingParams);\n  let callInstance;\n  let networkingParams = { url,\n    operation: endpoint.getOperation(),\n    timeout: endpoint.getRequestTimeout(modules)\n  };\n\n  outgoingParams.uuid = config.UUID;\n  outgoingParams.pnsdk = generatePNSDK(config);\n\n  if (config.useInstanceId) {\n    outgoingParams.instanceid = config.instanceId;\n  }\n\n  if (config.useRequestId) {\n    outgoingParams.requestid = uuidGenerator.createUUID();\n  }\n\n  if (endpoint.isAuthSupported() && config.getAuthKey()) {\n    outgoingParams.auth = config.getAuthKey();\n  }\n\n  if (config.secretKey) {\n    signRequest(modules, url, outgoingParams);\n  }\n\n  let onResponse = (status: StatusAnnouncement, payload: Object) => {\n    if (status.error) {\n      if (callback) {\n        callback(status);\n      } else if (promiseComponent) {\n        promiseComponent.reject(new PubNubError('PubNub call failed, check status for details', status));\n      }\n      return;\n    }\n\n    let parsedPayload = endpoint.handleResponse(modules, payload, incomingParams);\n\n    if (callback) {\n      callback(status, parsedPayload);\n    } else if (promiseComponent) {\n      promiseComponent.fulfill(parsedPayload);\n    }\n  };\n\n  if (endpoint.usePost && endpoint.usePost(modules, incomingParams)) {\n    let payload = endpoint.postPayload(modules, incomingParams);\n    callInstance = networking.POST(outgoingParams, payload, networkingParams, onResponse);\n  } else if (endpoint.useDelete && endpoint.useDelete()) {\n    callInstance = networking.DELETE(outgoingParams, networkingParams, onResponse);\n  } else {\n    callInstance = networking.GET(outgoingParams, networkingParams, onResponse);\n  }\n\n  if (endpoint.getOperation() === operationConstants.PNSubscribeOperation) {\n    return callInstance;\n  }\n\n  if (promiseComponent) {\n    return promiseComponent.promise;\n  }\n}\n"],"file":"endpoint.js"}