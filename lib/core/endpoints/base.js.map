{"version":3,"sources":["core/endpoints/base.js"],"names":[],"mappings":";;;;;;;;AAEA;;;;AACA;;;;AACA;;AACA;;;;;;;;;AAYE,wBAAuC;AAAA,QAAzB,MAAyB,QAAzB,MAAyB;;AAAA;;AACrC,SAAK,OAAL,GAAe,MAAf;AACD;;;;2CAEsB,c,EAAoC;AACzD,UAAI,CAAC,cAAL,EAAqB;AACnB,eAAO,KAAP;AACD;AACD,aAAO,IAAP;AACD;;;qCAEgB,c,EAA4C;AAAA;;AAC3D,UAAI,OAAO,EAAX;;AAEA,aAAO,IAAP,CAAY,KAAK,OAAL,CAAa,UAAzB,EAAqC,OAArC,CAA6C,UAAC,GAAD,EAAS;AACpD,YAAI,QAAQ,MAAK,OAAL,CAAa,UAAb,CAAwB,GAAxB,CAAZ;AACA,YAAI,EAAE,OAAO,IAAT,CAAJ,EAAoB,KAAK,GAAL,IAAY,KAAZ;AACrB,OAHD;;AAKA,UAAI,KAAK,OAAL,CAAa,aAAjB,EAAgC;AAC9B,aAAK,UAAL,GAAkB,KAAK,OAAL,CAAa,UAA/B;AACD;;AAED,UAAI,KAAK,OAAL,CAAa,YAAjB,EAA+B;AAC7B,aAAK,SAAL,GAAiB,eAAc,EAAd,EAAjB;AACD;;AAED,UAAI,eAAe,MAAf,CAAsB,OAAtB,IAAiC,KAAK,OAAL,CAAa,OAAlD,EAA2D;AACzD,aAAK,IAAL,GAAY,KAAK,OAAL,CAAa,OAAzB;AACD;;AAED,UAAI,eAAe,MAAf,CAAsB,IAAtB,IAA8B,KAAK,OAAL,CAAa,IAA/C,EAAqD;AACnD,aAAK,IAAL,GAAY,KAAK,OAAL,CAAa,IAAzB;AACD;;AAGD,aAAO,IAAP;AACD;;;0CAEqB,O,EAAyB;AAC7C,aAAO,KAAK,YAAL,CAAkB,EAAE,gBAAF,EAAlB,EAA+B,iBAA/B,CAAP;AACD;;;iCAEY,Y,EAAsB,I,EAAsB;AACvD,mBAAa,IAAb,GAAoB,IAApB;AACA,aAAO,YAAP;AACD;;;0BAEmB;AAAA,wCAAb,MAAa;AAAb,cAAa;AAAA;;AAClB,cAAQ,GAAR,CAAY,KAAZ,CAAkB,OAAlB,EAA2B,MAA3B;AACD","file":"core/endpoints/base.js","sourcesContent":["/* @flow */\n\nimport Networking from '../components/networking';\nimport Config from '../components/config';\nimport { endpointDefinition } from '../flow_interfaces';\nimport uuidGenerator from 'uuid';\n\ntype BaseConstruct = {\n  config: Config\n};\n\nexport default class {\n\n  _networking: Networking;\n  _config: Config;\n  _componentName: string;\n\n  constructor({ config }: BaseConstruct) {\n    this._config = config;\n  }\n\n  validateEndpointConfig(endpointConfig: endpointDefinition) {\n    if (!endpointConfig) {\n      return false;\n    }\n    return true;\n  }\n\n  createBaseParams(endpointConfig: endpointDefinition): Object {\n    let data = {};\n\n    Object.keys(this._config.baseParams).forEach((key) => {\n      let value = this._config.baseParams[key];\n      if (!(key in data)) data[key] = value;\n    });\n\n    if (this._config.useInstanceId) {\n      data.instanceid = this._config.instanceId;\n    }\n\n    if (this._config.useRequestId) {\n      data.requestid = uuidGenerator.v4();\n    }\n\n    if (endpointConfig.params.authKey && this._config.authKey) {\n      data.auth = this._config.authKey;\n    }\n\n    if (endpointConfig.params.uuid && this._config.UUID) {\n      data.uuid = this._config.UUID;\n    }\n\n\n    return data;\n  }\n\n  createValidationError(message: string): Object {\n    return this._createError({ message }, 'validationError');\n  }\n\n  _createError(errorPayload: Object, type: string): Object {\n    errorPayload.type = type;\n    return errorPayload;\n  }\n\n  log(...params: any) {\n    console.log.apply(console, params); // eslint-disable-line no-console\n  }\n\n}\n"],"sourceRoot":"/source/"}