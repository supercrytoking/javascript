{"version":3,"sources":["core/pubnub-common.js"],"names":["setup","db","networking","cbor","config","_config","Config","crypto","Crypto","init","tokenManager","_tokenManager","TokenManager","telemetryManager","_telemetryManager","TelemetryManager","maximumSamplesCount","modules","timeEndpoint","endpointCreator","bind","timeEndpointConfig","leaveEndpoint","presenceLeaveEndpointConfig","heartbeatEndpoint","presenceHeartbeatEndpointConfig","setStateEndpoint","presenceSetStateConfig","subscribeEndpoint","subscribeEndpointConfig","listenerManager","_listenerManager","ListenerManager","subscriptionManager","SubscriptionManager","addListener","removeListener","removeAllListeners","parseToken","setToken","setTokens","getToken","getTokens","clearTokens","channelGroups","listGroups","listChannelGroupsConfig","listChannels","listChannelsInChannelGroupConfig","addChannels","addChannelsChannelGroupConfig","removeChannels","removeChannelsChannelGroupConfig","deleteGroup","deleteChannelGroupConfig","push","addPushChannelsConfig","removePushChannelsConfig","deleteDevice","removeDevicePushConfig","listPushChannelsConfig","hereNow","presenceHereNowConfig","whereNow","presenceWhereNowEndpointConfig","getState","presenceGetStateConfig","setState","adaptStateChange","grant","grantEndpointConfig","grantToken","grantTokenEndpointConfig","audit","auditEndpointConfig","publish","publishEndpointConfig","fire","args","callback","replicate","storeInHistory","signal","signalEndpointConfig","history","historyEndpointConfig","deleteMessages","deleteMessagesEndpointConfig","messageCounts","messageCountsEndpointConfig","fetchMessages","fetchMessagesEndpointConfig","addMessageAction","addMessageActionEndpointConfig","removeMessageAction","removeMessageActionEndpointConfig","getMessageActions","getMessageActionEndpointConfig","objects","getAllUUIDMetadata","getAllUUIDMetadataEndpointConfig","getUUIDMetadata","getUUIDMetadataEndpointConfig","setUUIDMetadata","setUUIDMetadataEndpointConfig","removeUUIDMetadata","removeUUIDMetadataEndpointConfig","getAllChannelMetadata","getAllChannelMetadataEndpointConfig","getChannelMetadata","getChannelMetadataEndpointConfig","setChannelMetadata","setChannelMetadataEndpointConfig","removeChannelMetadata","removeChannelMetadataEndpointConfig","getChannelMembers","getMembersV2EndpointConfig","setChannelMembers","parameters","call","setMembersV2EndpointConfig","type","removeChannelMembers","getMemberships","getMembershipsV2EndpointConfig","setMemberships","setMembershipsV2EndpointConfig","removeMemberships","createUser","createUserEndpointConfig","updateUser","updateUserEndpointConfig","deleteUser","deleteUserEndpointConfig","getUser","getUserEndpointConfig","getUsers","getUsersEndpointConfig","createSpace","createSpaceEndpointConfig","updateSpace","updateSpaceEndpointConfig","deleteSpace","deleteSpaceEndpointConfig","getSpaces","getSpacesEndpointConfig","getSpace","getSpaceEndpointConfig","addMembers","addMembersEndpointConfig","updateMembers","updateMembersEndpointConfig","removeMembers","removeMembersEndpointConfig","getMembers","getMembersEndpointConfig","getMembershipsEndpointConfig","joinSpaces","joinSpacesEndpointConfig","updateMemberships","updateMembershipsEndpointConfig","leaveSpaces","leaveSpacesEndpointConfig","time","subscribe","adaptSubscribeChange","presence","adaptPresenceChange","unsubscribe","adaptUnsubscribeChange","disconnect","reconnect","destroy","isOffline","unsubscribeAll","stop","getSubscribedChannels","getSubscribedChannelGroups","encrypt","decrypt","getAuthKey","setAuthKey","setCipherKey","getUUID","setUUID","getFilterExpression","setFilterExpression","setHeartbeatInterval","hasModule","setProxy","proxy","getVersion","name","suffix","_addPnsdkSuffix","announceNetworkDown","restore","announceNetworkUp","title","body","NotificationsPayload","uuidGenerator","createUUID","OPERATIONS","CATEGORIES"],"mappings":"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","sourcesContent":["/** @flow */\n\nimport Config from './components/config';\nimport Crypto from './components/cryptography/index';\nimport SubscriptionManager from './components/subscription_manager';\nimport TelemetryManager from './components/telemetry_manager';\nimport NotificationsPayload from './components/push_payload';\nimport ListenerManager from './components/listener_manager';\nimport TokenManager from './components/token_manager';\n\nimport endpointCreator from './components/endpoint';\n\nimport { deprecated } from './utils';\n\nimport * as addChannelsChannelGroupConfig from './endpoints/channel_groups/add_channels';\nimport * as removeChannelsChannelGroupConfig from './endpoints/channel_groups/remove_channels';\nimport * as deleteChannelGroupConfig from './endpoints/channel_groups/delete_group';\nimport * as listChannelGroupsConfig from './endpoints/channel_groups/list_groups';\nimport * as listChannelsInChannelGroupConfig from './endpoints/channel_groups/list_channels';\n\nimport * as addPushChannelsConfig from './endpoints/push/add_push_channels';\nimport * as removePushChannelsConfig from './endpoints/push/remove_push_channels';\nimport * as listPushChannelsConfig from './endpoints/push/list_push_channels';\nimport * as removeDevicePushConfig from './endpoints/push/remove_device';\n\nimport * as presenceLeaveEndpointConfig from './endpoints/presence/leave';\nimport * as presenceWhereNowEndpointConfig from './endpoints/presence/where_now';\nimport * as presenceHeartbeatEndpointConfig from './endpoints/presence/heartbeat';\nimport * as presenceGetStateConfig from './endpoints/presence/get_state';\nimport * as presenceSetStateConfig from './endpoints/presence/set_state';\nimport * as presenceHereNowConfig from './endpoints/presence/here_now';\n\n// Actions API\n\nimport * as addMessageActionEndpointConfig from './endpoints/actions/add_message_action';\nimport * as removeMessageActionEndpointConfig from './endpoints/actions/remove_message_action';\nimport * as getMessageActionEndpointConfig from './endpoints/actions/get_message_actions';\n\n// Object API v2\nimport getAllUUIDMetadataEndpointConfig, {\n  type GetAllUUIDMetadataParams,\n  type GetAllUUIDMetadataResult\n} from './endpoints/objects/uuid/get_all';\n\nimport getUUIDMetadataEndpointConfig, {\n  type GetUUIDMetadataParams,\n  type GetUUIDMetadataResult\n} from './endpoints/objects/uuid/get';\n\nimport setUUIDMetadataEndpointConfig, {\n  type SetUUIDMetadataParams,\n  type SetUUIDMetadataResult\n} from './endpoints/objects/uuid/set';\n\nimport removeUUIDMetadataEndpointConfig, {\n  type RemoveUUIDMetadataParams,\n  type RemoveUUIDMetadataResult\n} from './endpoints/objects/uuid/remove';\n\nimport getAllChannelMetadataEndpointConfig, {\n  type GetAllChannelMetadataParams,\n  type GetAllChannelMetadataResult\n} from './endpoints/objects/channel/get_all';\n\nimport getChannelMetadataEndpointConfig, {\n  type GetChannelMetadataParams,\n  type GetChannelMetadataResult\n} from './endpoints/objects/channel/get';\n\nimport setChannelMetadataEndpointConfig, {\n  type SetChannelMetadataParams,\n  type SetChannelMetadataResult\n} from './endpoints/objects/channel/set';\n\nimport removeChannelMetadataEndpointConfig, {\n  type RemoveChannelMetadataParams,\n  type RemoveChannelMetadataResult\n} from './endpoints/objects/channel/remove';\n\nimport getMembersV2EndpointConfig, {\n  type GetMembersParams,\n  type GetMembersResult\n} from './endpoints/objects/member/get';\n\nimport setMembersV2EndpointConfig, {\n  type UpsertMembersParams,\n  type RemoveMembersParams,\n  type SetMembersResult\n} from './endpoints/objects/member/set';\n\nimport getMembershipsV2EndpointConfig, {\n  type GetMembershipsParams,\n  type GetMembershipsResult\n} from './endpoints/objects/membership/get';\n\nimport setMembershipsV2EndpointConfig, {\n  type UpsertMembershipsParams,\n  type RemoveMembershipsParams,\n  type SetMembershipsResult\n} from './endpoints/objects/membership/set';\n\n// Objects API\n\nimport * as createUserEndpointConfig from './endpoints/users/create_user';\nimport * as updateUserEndpointConfig from './endpoints/users/update_user';\nimport * as deleteUserEndpointConfig from './endpoints/users/delete_user';\nimport * as getUserEndpointConfig from './endpoints/users/get_user';\nimport * as getUsersEndpointConfig from './endpoints/users/get_users';\nimport * as createSpaceEndpointConfig from './endpoints/spaces/create_space';\nimport * as updateSpaceEndpointConfig from './endpoints/spaces/update_space';\nimport * as deleteSpaceEndpointConfig from './endpoints/spaces/delete_space';\nimport * as getSpacesEndpointConfig from './endpoints/spaces/get_spaces';\nimport * as getSpaceEndpointConfig from './endpoints/spaces/get_space';\nimport * as getMembersEndpointConfig from './endpoints/memberships/get_members';\nimport * as addMembersEndpointConfig from './endpoints/memberships/add_members';\nimport * as updateMembersEndpointConfig from './endpoints/memberships/update_members';\nimport * as removeMembersEndpointConfig from './endpoints/memberships/remove_members';\nimport * as getMembershipsEndpointConfig from './endpoints/memberships/get_memberships';\nimport * as updateMembershipsEndpointConfig from './endpoints/memberships/update_memberships';\nimport * as joinSpacesEndpointConfig from './endpoints/memberships/join_spaces';\nimport * as leaveSpacesEndpointConfig from './endpoints/memberships/leave_spaces';\n\nimport * as auditEndpointConfig from './endpoints/access_manager/audit';\nimport * as grantEndpointConfig from './endpoints/access_manager/grant';\nimport * as grantTokenEndpointConfig from './endpoints/access_manager/grant_token';\n\nimport * as publishEndpointConfig from './endpoints/publish';\nimport * as signalEndpointConfig from './endpoints/signal';\nimport * as historyEndpointConfig from './endpoints/history/get_history';\nimport * as deleteMessagesEndpointConfig from './endpoints/history/delete_messages';\nimport * as messageCountsEndpointConfig from './endpoints/history/message_counts';\nimport * as fetchMessagesEndpointConfig from './endpoints/fetch_messages';\nimport * as timeEndpointConfig from './endpoints/time';\nimport * as subscribeEndpointConfig from './endpoints/subscribe';\n\nimport OPERATIONS from './constants/operations';\nimport CATEGORIES from './constants/categories';\n\nimport { InternalSetupStruct } from './flow_interfaces';\nimport uuidGenerator from './components/uuid';\n\nexport default class {\n  _config: Config;\n  _telemetryManager: TelemetryManager;\n  _listenerManager: ListenerManager;\n  _tokenManager: TokenManager;\n\n  // tell flow about the mounted endpoint\n  time: Function;\n  publish: Function;\n  fire: Function;\n\n  history: Function;\n  deleteMessages: Function;\n  messageCounts: Function;\n  fetchMessages: Function;\n\n  //\n  channelGroups: Object;\n  //\n  push: Object;\n  //\n  hereNow: Function;\n  whereNow: Function;\n  getState: Function;\n  setState: Function;\n  //\n  grant: Function;\n  grantToken: Function;\n  audit: Function;\n  //\n  subscribe: Function;\n  signal: Function;\n  presence: Function;\n  unsubscribe: Function;\n  unsubscribeAll: Function;\n\n  // Actions API\n  addMessageAction: Function;\n  removeMessageAction: Function;\n  getMessageActions: Function;\n\n  // Objects API v2\n\n  objects: {\n    getAllUUIDMetadata: (parameters?: GetAllUUIDMetadataParams) => Promise<GetAllUUIDMetadataResult>,\n    getUUIDMetadata: (parameters?: GetUUIDMetadataParams) => Promise<GetUUIDMetadataResult>,\n    setUUIDMetadata: (parameters: SetUUIDMetadataParams) => Promise<SetUUIDMetadataResult>,\n    removeUUIDMetadata: (parameters?: RemoveUUIDMetadataParams) => Promise<RemoveUUIDMetadataResult>,\n\n    getAllChannelMetadata: (parameters?: GetAllChannelMetadataParams) => Promise<GetAllChannelMetadataResult>,\n    getChannelMetadata: (parameters: GetChannelMetadataParams) => Promise<GetChannelMetadataResult>,\n    setChannelMetadata: (parameters: SetChannelMetadataParams) => Promise<SetChannelMetadataResult>,\n    removeChannelMetadata: (parameters: RemoveChannelMetadataParams) => Promise<RemoveChannelMetadataResult>,\n\n    getMemberships: (parameters: GetMembershipsParams) => Promise<GetMembershipsResult>,\n    setMemberships: (parameters: $Diff<UpsertMembershipsParams, {| type: string |}>) => Promise<SetMembershipsResult>,\n    removeMemberships: (parameters: $Diff<RemoveMembershipsParams, {| type: string |}>) => Promise<SetMembershipsResult>,\n\n    getChannelMembers: (parameters: GetMembersParams) => Promise<GetMembersResult>,\n    setChannelMembers: (parameters: $Diff<UpsertMembersParams, {| type: string |}>) => Promise<SetMembersResult>,\n    removeChannelMembers: (parameters: $Diff<RemoveMembersParams, {| type: string |}>) => Promise<SetMembersResult>,\n  };\n\n  // Objects API\n\n  createUser: Function;\n  updateUser: Function;\n  deleteUser: Function;\n  getUser: Function;\n  getUsers: Function;\n  createSpace: Function;\n  updateSpace: Function;\n  deleteSpace: Function;\n  getSpaces: Function;\n  getSpace: Function;\n  getMembers: Function;\n  addMembers: Function;\n  updateMembers: Function;\n  removeMembers: Function;\n  getMemberships: Function;\n  joinSpaces: Function;\n  updateMemberships: Function;\n  leaveSpaces: Function;\n\n  disconnect: Function;\n  reconnect: Function;\n\n  destroy: Function;\n  stop: Function;\n\n  getSubscribedChannels: Function;\n  getSubscribedChannelGroups: Function;\n\n  addListener: Function;\n  removeListener: Function;\n  removeAllListeners: Function;\n\n  parseToken: Function;\n  setToken: Function;\n  setTokens: Function;\n  getToken: Function;\n  getTokens: Function;\n  clearTokens: Function;\n\n  getAuthKey: Function;\n  setAuthKey: Function;\n\n  setCipherKey: Function;\n  setUUID: Function;\n  getUUID: Function;\n\n  getFilterExpression: Function;\n  setFilterExpression: Function;\n\n  setHeartbeatInterval: Function;\n\n  setProxy: Function;\n\n  encrypt: Function;\n  decrypt: Function;\n\n  //\n\n  constructor(setup: InternalSetupStruct) {\n    let { db, networking, cbor } = setup;\n\n    const config = (this._config = new Config({ setup, db }));\n    const crypto = new Crypto({ config });\n\n    networking.init(config);\n\n    const tokenManager = (this._tokenManager = new TokenManager(config, cbor));\n    const telemetryManager = (this._telemetryManager = new TelemetryManager({ maximumSamplesCount: 60000 }));\n\n    let modules = { config, networking, crypto, tokenManager, telemetryManager };\n\n    const timeEndpoint = endpointCreator.bind(this, modules, timeEndpointConfig);\n    const leaveEndpoint = endpointCreator.bind(this, modules, presenceLeaveEndpointConfig);\n    const heartbeatEndpoint = endpointCreator.bind(this, modules, presenceHeartbeatEndpointConfig);\n    const setStateEndpoint = endpointCreator.bind(this, modules, presenceSetStateConfig);\n    const subscribeEndpoint = endpointCreator.bind(this, modules, subscribeEndpointConfig);\n\n    // managers\n    const listenerManager = (this._listenerManager = new ListenerManager());\n\n    const subscriptionManager = new SubscriptionManager({\n      timeEndpoint,\n      leaveEndpoint,\n      heartbeatEndpoint,\n      setStateEndpoint,\n      subscribeEndpoint,\n      crypto: modules.crypto,\n      config: modules.config,\n      listenerManager,\n    });\n\n    this.addListener = listenerManager.addListener.bind(listenerManager);\n    this.removeListener = listenerManager.removeListener.bind(listenerManager);\n    this.removeAllListeners = listenerManager.removeAllListeners.bind(listenerManager);\n\n    this.parseToken = tokenManager.parseToken.bind(tokenManager);\n    this.setToken = tokenManager.setToken.bind(tokenManager);\n    this.setTokens = tokenManager.setTokens.bind(tokenManager);\n    this.getToken = tokenManager.getToken.bind(tokenManager);\n    this.getTokens = tokenManager.getTokens.bind(tokenManager);\n    this.clearTokens = tokenManager.clearTokens.bind(tokenManager);\n\n    /* channel groups */\n    this.channelGroups = {\n      listGroups: endpointCreator.bind(this, modules, listChannelGroupsConfig),\n      listChannels: endpointCreator.bind(this, modules, listChannelsInChannelGroupConfig),\n      addChannels: endpointCreator.bind(this, modules, addChannelsChannelGroupConfig),\n      removeChannels: endpointCreator.bind(this, modules, removeChannelsChannelGroupConfig),\n      deleteGroup: endpointCreator.bind(this, modules, deleteChannelGroupConfig),\n    };\n    /* push */\n    this.push = {\n      addChannels: endpointCreator.bind(this, modules, addPushChannelsConfig),\n      removeChannels: endpointCreator.bind(this, modules, removePushChannelsConfig),\n      deleteDevice: endpointCreator.bind(this, modules, removeDevicePushConfig),\n      listChannels: endpointCreator.bind(this, modules, listPushChannelsConfig),\n    };\n    /* presence */\n    this.hereNow = endpointCreator.bind(this, modules, presenceHereNowConfig);\n    this.whereNow = endpointCreator.bind(this, modules, presenceWhereNowEndpointConfig);\n    this.getState = endpointCreator.bind(this, modules, presenceGetStateConfig);\n    this.setState = subscriptionManager.adaptStateChange.bind(subscriptionManager);\n    /* PAM */\n    this.grant = endpointCreator.bind(this, modules, grantEndpointConfig);\n    this.grantToken = endpointCreator.bind(this, modules, grantTokenEndpointConfig);\n    this.audit = endpointCreator.bind(this, modules, auditEndpointConfig);\n    //\n    this.publish = endpointCreator.bind(this, modules, publishEndpointConfig);\n\n    this.fire = (args, callback) => {\n      args.replicate = false;\n      args.storeInHistory = false;\n      return this.publish(args, callback);\n    };\n\n    this.signal = endpointCreator.bind(this, modules, signalEndpointConfig);\n\n    this.history = endpointCreator.bind(this, modules, historyEndpointConfig);\n    this.deleteMessages = endpointCreator.bind(this, modules, deleteMessagesEndpointConfig);\n    this.messageCounts = endpointCreator.bind(this, modules, messageCountsEndpointConfig);\n    this.fetchMessages = endpointCreator.bind(this, modules, fetchMessagesEndpointConfig);\n\n    // Actions API\n\n    this.addMessageAction = endpointCreator.bind(this, modules, addMessageActionEndpointConfig);\n\n    this.removeMessageAction = endpointCreator.bind(this, modules, removeMessageActionEndpointConfig);\n\n    this.getMessageActions = endpointCreator.bind(this, modules, getMessageActionEndpointConfig);\n\n    // Objects API v2\n\n    this.objects = {\n      getAllUUIDMetadata: endpointCreator.bind(this, modules, getAllUUIDMetadataEndpointConfig),\n      getUUIDMetadata: endpointCreator.bind(this, modules, getUUIDMetadataEndpointConfig),\n      setUUIDMetadata: endpointCreator.bind(this, modules, setUUIDMetadataEndpointConfig),\n      removeUUIDMetadata: endpointCreator.bind(this, modules, removeUUIDMetadataEndpointConfig),\n\n      getAllChannelMetadata: endpointCreator.bind(this, modules, getAllChannelMetadataEndpointConfig),\n      getChannelMetadata: endpointCreator.bind(this, modules, getChannelMetadataEndpointConfig),\n      setChannelMetadata: endpointCreator.bind(this, modules, setChannelMetadataEndpointConfig),\n      removeChannelMetadata: endpointCreator.bind(this, modules, removeChannelMetadataEndpointConfig),\n\n      getChannelMembers: endpointCreator.bind(this, modules, getMembersV2EndpointConfig),\n      setChannelMembers: (parameters: $Diff<UpsertMembersParams, {| type: string |}>) => endpointCreator.call(this, modules, setMembersV2EndpointConfig, {\n        type: 'set',\n        ...parameters,\n      }),\n      removeChannelMembers: (parameters: $Diff<RemoveMembersParams, {| type: string |}>) => endpointCreator.call(this, modules, setMembersV2EndpointConfig, {\n        type: 'remove',\n        ...parameters,\n      }),\n\n      getMemberships: endpointCreator.bind(this, modules, getMembershipsV2EndpointConfig),\n      setMemberships: (parameters: $Diff<UpsertMembershipsParams, {| type: string |}>) => endpointCreator.call(this, modules, setMembershipsV2EndpointConfig, {\n        type: 'set',\n        ...parameters,\n      }),\n      removeMemberships: (parameters: $Diff<RemoveMembershipsParams, {| type: string |}>) => endpointCreator.call(this, modules, setMembershipsV2EndpointConfig, {\n        type: 'remove',\n        ...parameters,\n      })\n    };\n\n    // Objects API\n\n    this.createUser = deprecated(endpointCreator.bind(this, modules, createUserEndpointConfig));\n\n    this.updateUser = deprecated(endpointCreator.bind(this, modules, updateUserEndpointConfig));\n\n    this.deleteUser = deprecated(endpointCreator.bind(this, modules, deleteUserEndpointConfig));\n\n    this.getUser = deprecated(endpointCreator.bind(this, modules, getUserEndpointConfig));\n\n    this.getUsers = deprecated(endpointCreator.bind(this, modules, getUsersEndpointConfig));\n\n    this.createSpace = deprecated(endpointCreator.bind(this, modules, createSpaceEndpointConfig));\n\n    this.updateSpace = deprecated(endpointCreator.bind(this, modules, updateSpaceEndpointConfig));\n\n    this.deleteSpace = deprecated(endpointCreator.bind(this, modules, deleteSpaceEndpointConfig));\n\n    this.getSpaces = deprecated(endpointCreator.bind(this, modules, getSpacesEndpointConfig));\n\n    this.getSpace = deprecated(endpointCreator.bind(this, modules, getSpaceEndpointConfig));\n\n    this.addMembers = deprecated(endpointCreator.bind(this, modules, addMembersEndpointConfig));\n\n    this.updateMembers = deprecated(endpointCreator.bind(this, modules, updateMembersEndpointConfig));\n\n    this.removeMembers = deprecated(endpointCreator.bind(this, modules, removeMembersEndpointConfig));\n\n    this.getMembers = deprecated(endpointCreator.bind(this, modules, getMembersEndpointConfig));\n\n    this.getMemberships = deprecated(endpointCreator.bind(this, modules, getMembershipsEndpointConfig));\n\n    this.joinSpaces = deprecated(endpointCreator.bind(this, modules, joinSpacesEndpointConfig));\n\n    this.updateMemberships = deprecated(endpointCreator.bind(this, modules, updateMembershipsEndpointConfig));\n\n    this.leaveSpaces = deprecated(endpointCreator.bind(this, modules, leaveSpacesEndpointConfig));\n\n    this.time = timeEndpoint;\n\n    // subscription related methods\n    this.subscribe = subscriptionManager.adaptSubscribeChange.bind(subscriptionManager);\n    this.presence = subscriptionManager.adaptPresenceChange.bind(subscriptionManager);\n    this.unsubscribe = subscriptionManager.adaptUnsubscribeChange.bind(subscriptionManager);\n    this.disconnect = subscriptionManager.disconnect.bind(subscriptionManager);\n    this.reconnect = subscriptionManager.reconnect.bind(subscriptionManager);\n\n    this.destroy = (isOffline: boolean) => {\n      subscriptionManager.unsubscribeAll(isOffline);\n      subscriptionManager.disconnect();\n    };\n\n    // --- deprecated  ------------------\n    this.stop = this.destroy; // --------\n    // --- deprecated  ------------------\n\n    this.unsubscribeAll = subscriptionManager.unsubscribeAll.bind(subscriptionManager);\n\n    this.getSubscribedChannels = subscriptionManager.getSubscribedChannels.bind(subscriptionManager);\n    this.getSubscribedChannelGroups = subscriptionManager.getSubscribedChannelGroups.bind(subscriptionManager);\n\n    // mount crypto\n    this.encrypt = crypto.encrypt.bind(crypto);\n    this.decrypt = crypto.decrypt.bind(crypto);\n\n    /* config */\n    this.getAuthKey = modules.config.getAuthKey.bind(modules.config);\n    this.setAuthKey = modules.config.setAuthKey.bind(modules.config);\n    this.setCipherKey = modules.config.setCipherKey.bind(modules.config);\n    this.getUUID = modules.config.getUUID.bind(modules.config);\n    this.setUUID = modules.config.setUUID.bind(modules.config);\n    this.getFilterExpression = modules.config.getFilterExpression.bind(modules.config);\n    this.setFilterExpression = modules.config.setFilterExpression.bind(modules.config);\n\n    this.setHeartbeatInterval = modules.config.setHeartbeatInterval.bind(modules.config);\n\n    if (networking.hasModule('proxy')) {\n      this.setProxy = (proxy) => {\n        modules.config.setProxy(proxy);\n        this.reconnect();\n      };\n    }\n  }\n\n  getVersion(): string {\n    return this._config.getVersion();\n  }\n\n  _addPnsdkSuffix(name: string, suffix: string) {\n    this._config._addPnsdkSuffix(name, suffix);\n  }\n\n  // network hooks to indicate network changes\n  networkDownDetected() {\n    this._listenerManager.announceNetworkDown();\n\n    if (this._config.restore) {\n      this.disconnect();\n    } else {\n      this.destroy(true);\n    }\n  }\n\n  networkUpDetected() {\n    this._listenerManager.announceNetworkUp();\n    this.reconnect();\n  }\n\n  static notificationPayload(title: ?string, body: ?string): NotificationsPayload {\n    return new NotificationsPayload(title, body);\n  }\n\n  static generateUUID(): string {\n    return uuidGenerator.createUUID();\n  }\n\n  static OPERATIONS = OPERATIONS;\n  static CATEGORIES = CATEGORIES;\n}\n"],"file":"pubnub-common.js"}