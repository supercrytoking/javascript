{"version":3,"sources":["core/endpoints/history.js"],"names":[],"mappings":";;;;;QAegB,Y,GAAA,Y;QAIA,c,GAAA,c;QAQA,M,GAAA,M;QAMA,a,GAAA,a;QAaA,c,GAAA,c;;AA5ChB;;AAEA,SAAS,gBAAT,CAA0B,OAA1B,EAAmC,OAAnC,EAAmE;AAAA,MAC3D,MAD2D,GACxC,OADwC,CAC3D,MAD2D;AAAA,MACnD,MADmD,GACxC,OADwC,CACnD,MADmD;;AAEjE,MAAI,CAAC,OAAO,SAAZ,EAAuB,OAAO,OAAP;;AAEvB,MAAI;AACF,WAAO,OAAO,OAAP,CAAe,OAAf,CAAP;AACD,GAFD,CAEE,OAAO,CAAP,EAAU;AACV,WAAO,OAAP;AACD;AACF;;AAEM,SAAS,YAAT,GAAgC;AACrC,SAAO,oBAAP;AACD;;AAEM,SAAS,cAAT,CAAwB,OAAxB,EAAiC,cAAjC,EAAwE;AAAA,MACvE,OADuE,GAC3D,cAD2D,CACvE,OADuE;AAAA,MAEvE,MAFuE,GAE5D,OAF4D,CAEvE,MAFuE;;;AAI7E,MAAI,CAAC,OAAL,EAAc,OAAO,iBAAP;AACd,MAAI,CAAC,OAAO,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAAS,MAAT,CAAgB,OAAhB,EAAyB,cAAzB,EAAwE;AAAA,MACvE,OADuE,GAC3D,cAD2D,CACvE,OADuE;AAAA,MAEvE,MAFuE,GAE5D,OAF4D,CAEvE,MAFuE;;AAG7E,SAAO,yBAAyB,OAAO,YAAhC,GAA+C,WAA/C,GAA6D,mBAAmB,OAAnB,CAApE;AACD;;AAEM,SAAS,aAAT,CAAuB,OAAvB,EAAgC,cAAhC,EAA+E;AAAA,MAC5E,KAD4E,GACrB,cADqB,CAC5E,KAD4E;AAAA,MACrE,GADqE,GACrB,cADqB,CACrE,GADqE;AAAA,MAChE,gBADgE,GACrB,cADqB,CAChE,gBADgE;AAAA,MAC9C,OAD8C,GACrB,cADqB,CAC9C,OAD8C;AAAA,8BACrB,cADqB,CACrC,KADqC;AAAA,MACrC,KADqC,yCAC7B,GAD6B;;AAEpF,MAAI,iBAAiB,EAArB;;AAEA,iBAAe,KAAf,GAAuB,KAAvB;AACA,MAAI,KAAJ,EAAW,eAAe,KAAf,GAAuB,KAAvB;AACX,MAAI,GAAJ,EAAS,eAAe,GAAf,GAAqB,GAArB;AACT,MAAI,oBAAoB,IAAxB,EAA8B,eAAe,aAAf,GAA+B,iBAAiB,QAAjB,EAA/B;AAC9B,MAAI,WAAW,IAAf,EAAqB,eAAe,OAAf,GAAyB,QAAQ,QAAR,EAAzB;;AAErB,SAAO,cAAP;AACD;;AAEM,SAAS,cAAT,CAAwB,OAAxB,EAAiC,cAAjC,EAAyF;AAC9F,MAAM,WAA4B;AAChC,cAAU,EADsB;AAEhC,oBAAgB,SAAS,eAAe,CAAf,CAAT,EAA4B,EAA5B,CAFgB;AAGhC,kBAAc,SAAS,eAAe,CAAf,CAAT,EAA4B,EAA5B;AAHkB,GAAlC;;AAMA,iBAAe,CAAf,EAAkB,OAAlB,CAA0B,UAAC,iBAAD,EAAuB;AAC/C,QAAM,OAAoB;AACxB,iBAAW,IADa;AAExB,aAAO;AAFiB,KAA1B;;AAKA,QAAI,kBAAkB,SAAtB,EAAiC;AAC/B,WAAK,SAAL,GAAiB,kBAAkB,SAAnC;AACA,WAAK,KAAL,GAAa,iBAAiB,OAAjB,EAA0B,kBAAkB,OAA5C,CAAb;AACD,KAHD,MAGO;AACL,WAAK,KAAL,GAAa,iBAAiB,OAAjB,EAA0B,iBAA1B,CAAb;AACD;;AAED,aAAS,QAAT,CAAkB,IAAlB,CAAuB,IAAvB;AACD,GAdD;;AAgBA,SAAO,QAAP;AACD","file":"core/endpoints/history.js","sourcesContent":["/* @flow */\n\nimport { FetchHistoryArguments, HistoryResponse, HistoryItem } from '../flow_interfaces';\n\nfunction __processMessage(modules, message: Object): Object | null {\n  let { config, crypto } = modules;\n  if (!config.cipherKey) return message;\n\n  try {\n    return crypto.decrypt(message);\n  } catch (e) {\n    return message;\n  }\n}\n\nexport function getOperation(): string {\n  return 'PNHistoryOperation';\n}\n\nexport function validateParams(modules, incomingParams: FetchHistoryArguments) {\n  let { channel } = incomingParams;\n  let { config } = modules;\n\n  if (!channel) return 'Missing channel';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules, incomingParams: FetchHistoryArguments): string {\n  let { channel } = incomingParams;\n  let { config } = modules;\n  return '/v2/history/sub-key/' + config.subscribeKey + '/channel/' + encodeURIComponent(channel);\n}\n\nexport function prepareParams(modules, incomingParams: FetchHistoryArguments): Object {\n  const { start, end, includeTimetoken, reverse, count = 100 } = incomingParams;\n  let outgoingParams = {};\n\n  outgoingParams.count = count;\n  if (start) outgoingParams.start = start;\n  if (end) outgoingParams.end = end;\n  if (includeTimetoken != null) outgoingParams.include_token = includeTimetoken.toString();\n  if (reverse != null) outgoingParams.reverse = reverse.toString();\n\n  return outgoingParams;\n}\n\nexport function handleResponse(modules, serverResponse: FetchHistoryArguments): HistoryResponse {\n  const response: HistoryResponse = {\n    messages: [],\n    startTimeToken: parseInt(serverResponse[1], 10),\n    endTimeToken: parseInt(serverResponse[2], 10),\n  };\n\n  serverResponse[0].forEach((serverHistoryItem) => {\n    const item: HistoryItem = {\n      timetoken: null,\n      entry: null\n    };\n\n    if (serverHistoryItem.timetoken) {\n      item.timetoken = serverHistoryItem.timetoken;\n      item.entry = __processMessage(modules, serverHistoryItem.message);\n    } else {\n      item.entry = __processMessage(modules, serverHistoryItem);\n    }\n\n    response.messages.push(item);\n  });\n\n  return response;\n}\n"],"sourceRoot":"/source/"}