{"version":3,"sources":["core/components/logger.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;;;IAEM,Y;AAIJ,wBAAY,UAAZ,EAAgC;AAAA;;AAC9B,SAAK,WAAL,GAAmB,UAAnB;AACD;;;;mCAEc,K,EAAe,O,EAAiB;AAC7C,yBAAO,KAAP,EAAc;AACZ,mBAAW,KAAK,WADJ;AAEZ,cAAM,OAFM;AAGZ,mBAAW,IAAI,IAAJ;AAHC,OAAd;AAKD;;;0BAEK,O,EAAiB;AACrB,WAAK,cAAL,CAAoB,OAApB,EAA6B,OAA7B;AACD;;;0BAEK,O,EAAiB;AACrB,WAAK,cAAL,CAAoB,OAApB,EAA6B,OAA7B;AACD;;;;;;kBAKY;AACb,WADa,qBACH,UADG,EACiB;AAC5B,WAAO,IAAI,YAAJ,CAAiB,UAAjB,CAAP;AACD;AAHY,C","file":"core/components/logger.js","sourcesContent":["import logger from 'loglevel';\n\nclass moduleLogger {\n\n  _moduleName: string;\n\n  constructor(moduleName: string) {\n    this._moduleName = moduleName;\n  }\n\n  __commonLogger(level: string, payload: Object) {\n    logger[level]({\n      component: this._moduleName,\n      data: payload,\n      timestamp: new Date(),\n    });\n  }\n\n  error(payload: Object) {\n    this.__commonLogger('error', payload);\n  }\n\n  debug(payload: Object) {\n    this.__commonLogger('debug', payload);\n  }\n\n}\n\n\nexport default {\n  getLogger(moduleName: string) {\n    return new moduleLogger(moduleName);\n  },\n};\n"],"sourceRoot":"/source/"}