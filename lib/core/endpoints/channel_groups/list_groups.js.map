{"version":3,"sources":["core/endpoints/channel_groups/list_groups.js"],"names":[],"mappings":";;;;;QAIgB,Y,GAAA,Y;QAIA,c,GAAA,c;QAMA,M,GAAA,M;QAKA,a,GAAA,a;QAIA,c,GAAA,c;;AArBhB;;AAEO,SAAS,YAAT,GAAgC;AACrC,SAAO,0BAAP;AACD;;AAEM,SAAS,cAAT,CAAwB,OAAxB,EAAiC;AAAA,MAChC,MADgC,GACrB,OADqB,CAChC,MADgC;;;AAGtC,MAAI,CAAC,OAAO,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAAS,MAAT,CAAgB,OAAhB,EAAiC;AAAA,MAChC,MADgC,GACrB,OADqB,CAChC,MADgC;;AAEtC,SAAO,sCAAsC,OAAO,YAA7C,GAA4D,gBAAnE;AACD;;AAEM,SAAS,aAAT,GAAiC;AACtC,SAAO,EAAP;AACD;;AAEM,SAAS,cAAT,CAAwB,OAAxB,EAAiC,OAAjC,EAAiE;AACtE,SAAO;AACL,YAAQ,QAAQ,OAAR,CAAgB;AADnB,GAAP;AAGD","file":"core/endpoints/channel_groups/list_groups.js","sourcesContent":["/* @flow */\n\nimport { ListAllGroupsResponse } from '../../flow_interfaces';\n\nexport function getOperation(): string {\n  return 'PNChannelGroupsOperation';\n}\n\nexport function validateParams(modules) {\n  let { config } = modules;\n\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules): string {\n  let { config } = modules;\n  return '/v1/channel-registration/sub-key/' + config.subscribeKey + '/channel-group';\n}\n\nexport function prepareParams(): Object {\n  return {};\n}\n\nexport function handleResponse(modules, payload): ListAllGroupsResponse {\n  return {\n    groups: payload.payload.groups\n  };\n}\n"],"sourceRoot":"/source/"}