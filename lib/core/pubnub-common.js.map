{"version":3,"sources":["core/pubnub-common.js"],"names":[],"mappings":"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","file":"core/pubnub-common.js","sourcesContent":["/* @flow */\n\nimport Networking from './components/networking';\nimport Config from './components/config';\nimport Crypto from './components/cryptography/index';\nimport SubscriptionManager from './components/subscription_manager';\nimport ListenerManager from './components/listener_manager';\n\nimport endpointCreator from './components/endpoint';\n\nimport * as addChannelsChannelGroupConfig from './endpoints/channel_groups/add_channels';\nimport * as removeChannelsChannelGroupConfig from './endpoints/channel_groups/remove_channels';\nimport * as deleteChannelGroupConfig from './endpoints/channel_groups/delete_group';\nimport * as listChannelGroupsConfig from './endpoints/channel_groups/list_groups';\nimport * as listChannelsInChannelGroupConfig from './endpoints/channel_groups/list_channels';\n\nimport * as historyEndpointConfig from './endpoints/history';\nimport * as timeEndpointConfig from './endpoints/time';\n\nimport packageJSON from '../../package.json';\n\n\nimport PresenceEndpoints from './endpoints/presence';\nimport PushEndpoint from './endpoints/push';\nimport AccessEndpoints from './endpoints/access';\nimport SubscribeEndpoints from './endpoints/subscribe';\nimport PublishEndpoints from './endpoints/publish';\n\nimport { InternalSetupStruct } from './flow_interfaces';\n\nexport default class {\n\n  _config: Config;\n  _crypto: Crypto;\n  _networking: Networking;\n\n  // tell flow about the mounted endpoint\n  time: Function;\n  publish: Function;\n  fire: Function;\n  history: Function;\n  //\n  channelGroups: Object;\n  //\n  push: Object;\n  //\n  hereNow: Function;\n  whereNow: Function;\n  getState: Function;\n  setState: Function;\n  //\n  grant: Function;\n  audit: Function;\n  //\n  subscribe: Function;\n  unsubscribe: Function;\n  reconnect: Function;\n  stop: Function;\n\n  addListener: Function;\n  removeListener: Function;\n\n  getAuthKey: Function;\n  setAuthKey: Function;\n\n  setCipherKey: Function;\n  setUUID: Function;\n  getUUID: Function;\n\n  getFilterExpression: Function;\n  setFilterExpression: Function;\n\n  //\n\n  constructor(setup: InternalSetupStruct) {\n    let { sendBeacon, db } = setup;\n\n    const config = new Config({ setup, db });\n    const crypto = new Crypto({ config });\n    const networking = new Networking({ config, crypto, sendBeacon });\n\n    let modules = { config, networking, crypto };\n\n    // old\n    const subscribeEndpoints = new SubscribeEndpoints({ networking: modules.networking, config: modules.config });\n    const presenceEndpoints = new PresenceEndpoints({ networking: modules.networking, config: modules.config });\n    const pushEndpoints = new PushEndpoint({ networking: modules.networking, config: modules.config });\n    const publishEndpoints = new PublishEndpoints({ networking: modules.networking, config: modules.config, crypto: modules.crypto });\n    const accessEndpoints = new AccessEndpoints({ config: modules.config, networking: modules.networking, crypto: modules.crypto });\n    //\n\n    const listenerManager = new ListenerManager();\n\n    // new\n    const timeEndpoint = endpointCreator.bind(this, modules, timeEndpointConfig);\n\n    //\n\n    const subscriptionManager = new SubscriptionManager({ config: modules.config, listenerManager, subscribeEndpoints, presenceEndpoints, timeEndpoints: timeEndpoint });\n\n    this.addListener = listenerManager.addListener.bind(listenerManager);\n    this.removeListener = listenerManager.removeListener.bind(listenerManager);\n\n    /** channel groups **/\n    this.channelGroups = {\n      listGroups: endpointCreator.bind(this, modules, listChannelGroupsConfig),\n      listChannels: endpointCreator.bind(this, modules, listChannelsInChannelGroupConfig),\n      addChannels: endpointCreator.bind(this, modules, addChannelsChannelGroupConfig),\n      removeChannels: endpointCreator.bind(this, modules, removeChannelsChannelGroupConfig),\n      deleteGroup: endpointCreator.bind(this, modules, deleteChannelGroupConfig)\n    };\n    /** push **/\n    this.push = {\n      addChannels: pushEndpoints.addDeviceToPushChannels.bind(pushEndpoints),\n      removeChannels: pushEndpoints.removeDeviceFromPushChannels.bind(pushEndpoints),\n      deleteDevice: pushEndpoints.removeDevice.bind(pushEndpoints),\n      listChannels: pushEndpoints.listChannelsForDevice.bind(pushEndpoints)\n    };\n    /** presence **/\n    this.hereNow = presenceEndpoints.hereNow.bind(presenceEndpoints);\n    this.whereNow = presenceEndpoints.whereNow.bind(presenceEndpoints);\n    this.getState = presenceEndpoints.getState.bind(presenceEndpoints);\n    this.setState = subscriptionManager.adaptStateChange.bind(subscriptionManager);\n    /** PAM **/\n    this.grant = accessEndpoints.grant.bind(accessEndpoints);\n    this.audit = accessEndpoints.audit.bind(accessEndpoints);\n    //\n    this.publish = publishEndpoints.publish.bind(publishEndpoints);\n    this.fire = publishEndpoints.fire.bind(publishEndpoints);\n    this.history = endpointCreator.bind(this, modules, historyEndpointConfig) // historyEndpointConfig historyEndpoint.fetch.bind(historyEndpoint);\n\n    this.time = timeEndpoint;\n\n\n    // subscription related methods\n    this.subscribe = subscriptionManager.adaptSubscribeChange.bind(subscriptionManager);\n    this.unsubscribe = subscriptionManager.adaptUnsubscribeChange.bind(subscriptionManager);\n    this.reconnect = subscriptionManager.reconnect.bind(subscriptionManager);\n    this.stop = subscriptionManager.disconnect.bind(subscriptionManager);\n\n    /** config **/\n    this.getAuthKey = modules.config.getAuthKey.bind(modules.config);\n    this.setAuthKey = modules.config.setAuthKey.bind(modules.config);\n    this.setCipherKey = modules.config.setCipherKey.bind(modules.config);\n    this.getUUID = modules.config.getUUID.bind(modules.config);\n    this.setUUID = modules.config.setUUID.bind(modules.config);\n    this.getFilterExpression = modules.config.getFilterExpression.bind(modules.config);\n    this.setFilterExpression = modules.config.setFilterExpression.bind(modules.config);\n  }\n\n\n  getVersion(): String { return packageJSON.version; }\n\n}\n"],"sourceRoot":"/source/"}